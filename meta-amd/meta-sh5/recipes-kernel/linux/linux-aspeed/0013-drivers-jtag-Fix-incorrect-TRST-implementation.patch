From 0160907a8689e6b75ed6427745082995b9f23d3e Mon Sep 17 00:00:00 2001
From: Supreeth Venkatesh <supreeth.venkatesh@amd.com>
Date: Tue, 27 Jul 2021 18:51:32 -0500
Subject: [PATCH 1/1] drivers/jtag: Fix incorrect TRST implementation
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit

Fixes incorrect TRST implementation.
On AMD platforms, TRST is driven by active low GPIO.
Also, HW_MODE_2 is disabled.

Signed-off-by: Supreeth Venkatesh <supreeth.venkatesh@amd.com>
---
 drivers/jtag/jtag-aspeed.c | 35 ++++++-----------------------------
 drivers/jtag/jtag.c        | 14 --------------
 include/linux/jtag.h       |  1 -
 include/uapi/linux/jtag.h  |  6 ------
 4 files changed, 6 insertions(+), 50 deletions(-)

diff --git a/drivers/jtag/jtag-aspeed.c b/drivers/jtag/jtag-aspeed.c
index 0c6d2d301f40..737756b79395 100644
--- a/drivers/jtag/jtag-aspeed.c
+++ b/drivers/jtag/jtag-aspeed.c
@@ -78,7 +78,6 @@

 /* ASPEED_JTAG_EC : Controller set for go to IDLE */
 #define ASPEED_JTAG_EC_GO_IDLE		BIT(0)
-#define ASPEED_JTAG_EC_TRST		BIT(18)

 #define ASPEED_JTAG_IOUT_LEN(len) \
 	(ASPEED_JTAG_CTL_ENG_EN | \
@@ -105,7 +104,7 @@
 #define WAIT_ITERATIONS		75

 /* Use this macro to switch between HW mode 1(comment out) and 2(defined)  */
-#define ASPEED_JTAG_HW_MODE_2_ENABLE	1
+//#define ASPEED_JTAG_HW_MODE_2_ENABLE	1

 /* ASPEED JTAG HW MODE 2 (Only supported in AST26xx series) */
 #define ASPEED_JTAG_SHDATA		0x20
@@ -145,7 +144,7 @@
 #define ASPEED_JTAG_GBLCTRL_FIFO_CTRL_MODE	BIT(24)
 #define ASPEED_JTAG_GBLCTRL_UPDT_SHIFT(x)	(((x) & GENMASK(9, 7)) << 13)
 #define ASPEED_JTAG_GBLCTRL_STSHIFT(x)	(((x) & GENMASK(0, 0)) << 16)
-#define ASPEED_JTAG_GBLCTRL_TRST	BIT(15)
+
 #define ASPEED_JTAG_CLK_DIVISOR_MASK	GENMASK(11, 0)
 #define ASPEED_JTAG_CLK_GET_DIV(x)	((x) & ASPEED_JTAG_CLK_DIVISOR_MASK)

@@ -807,10 +806,10 @@ static int aspeed_jtag_status_set_26xx(struct jtag *jtag,
 static void aspeed_jtag_xfer_sw(struct aspeed_jtag *aspeed_jtag,
 				struct jtag_xfer *xfer, u32 *data)
 {
-	unsigned long remain_xfer = xfer->length;
-	unsigned long shift_bits = 0;
-	unsigned long index = 0;
-	unsigned long tdi;
+	u32 remain_xfer = xfer->length;
+	u32 shift_bits = 0;
+	u32 index = 0;
+	u32 tdi;
 	char tdo;

 #ifdef DEBUG_JTAG
@@ -1280,27 +1279,6 @@ static int aspeed_jtag_status_get(struct jtag *jtag, u32 *status)
 	return 0;
 }

-static int aspeed_jtag_trst_reset(struct jtag *jtag, struct jtag_trst_reset *trst_reset)
-{
-	struct aspeed_jtag *aspeed_jtag = jtag_priv(jtag);
-	u32 data;
-
-	data = aspeed_jtag_read(aspeed_jtag, ASPEED_JTAG_EC);
-	if(trst_reset->operation != 0)
-	{
-		if (trst_reset->data == 1) {
-			data = data | ASPEED_JTAG_EC_TRST;
-		}
-		else {
-			data = data & ~ASPEED_JTAG_EC_TRST;
-		}
-		aspeed_jtag_write(aspeed_jtag, data, ASPEED_JTAG_EC);
-	}
-	data = ((data & ASPEED_JTAG_EC_TRST) == 0) ? 0 : 1;
-	trst_reset->data = (u8)(data);
-	return 0;
-}
-
 #ifdef USE_INTERRUPTS
 static irqreturn_t aspeed_jtag_interrupt(s32 this_irq, void *dev_id)
 {
@@ -1426,7 +1404,6 @@ static const struct jtag_ops aspeed_jtag_ops = {
 	.bitbang = aspeed_jtag_bitbang,
 	.enable = aspeed_jtag_enable,
 	.disable = aspeed_jtag_disable,
-	.trst_reset = aspeed_jtag_trst_reset
 };

 static const struct jtag_ops aspeed_jtag_ops_26xx = {
diff --git a/drivers/jtag/jtag.c b/drivers/jtag/jtag.c
index dc2a19033c7f..27c204bd9e6b 100644
--- a/drivers/jtag/jtag.c
+++ b/drivers/jtag/jtag.c
@@ -38,7 +38,6 @@ static long jtag_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 	struct bitbang_packet bitbang;
 	struct tck_bitbang *bitbang_data;
 	struct jtag_mode mode;
-	struct jtag_trst_reset trst_reset;
 	u8 *xfer_data;
 	u32 data_size;
 	u32 value;
@@ -173,19 +172,6 @@ static long jtag_ioctl(struct file *file, unsigned int cmd, unsigned long arg)

 		err = jtag->ops->mode_set(jtag, &mode);
 		break;
-	case JTAG_TRST_RESET:
-		if (copy_from_user(&trst_reset, (const void __user *)arg,
-				   sizeof(struct jtag_trst_reset)))
-			return -EFAULT;
-
-		err = jtag->ops->trst_reset(jtag, &trst_reset);
-		if (err) {
-			return err;
-		}
-		if (copy_to_user((void __user *)arg,
-				   (void *)&trst_reset, sizeof(struct jtag_trst_reset)))
-			return -EFAULT;
-		break;
 	default:
 		return -EINVAL;
 	}
diff --git a/include/linux/jtag.h b/include/linux/jtag.h
index ebd13a634459..112bb90029a9 100644
--- a/include/linux/jtag.h
+++ b/include/linux/jtag.h
@@ -36,7 +36,6 @@ struct jtag_ops {
 		       struct tck_bitbang *bitbang_data);
 	int (*enable)(struct jtag *jtag);
 	int (*disable)(struct jtag *jtag);
-	int (*trst_reset)(struct jtag *jtag, struct jtag_trst_reset *trst_reset);
 };

 void *jtag_priv(struct jtag *jtag);
diff --git a/include/uapi/linux/jtag.h b/include/uapi/linux/jtag.h
index 4ccc18d36eec..af6ac3d097a3 100644
--- a/include/uapi/linux/jtag.h
+++ b/include/uapi/linux/jtag.h
@@ -200,11 +200,6 @@ struct jtag_mode {
 	__u32	mode;
 };

-struct jtag_trst_reset {
-	__u8	operation; // 0 ; read , 1 : write
-	__u8	data;     // 0 means low, 1 means high - TRST pin
-};
-
 /* ioctl interface */
 #define __JTAG_IOCTL_MAGIC	0xb2

@@ -215,6 +210,5 @@ struct jtag_trst_reset {
 #define JTAG_GIOCSTATUS _IOWR(__JTAG_IOCTL_MAGIC, 4, enum jtag_tapstate)
 #define JTAG_SIOCMODE	_IOW(__JTAG_IOCTL_MAGIC, 5, struct jtag_mode)
 #define JTAG_IOCBITBANG	_IOWR(__JTAG_IOCTL_MAGIC, 6, struct bitbang_packet)
-#define JTAG_TRST_RESET	_IOWR(__JTAG_IOCTL_MAGIC, 7, struct jtag_trst_reset)

 #endif /* __UAPI_LINUX_JTAG_H */
--
2.17.1

