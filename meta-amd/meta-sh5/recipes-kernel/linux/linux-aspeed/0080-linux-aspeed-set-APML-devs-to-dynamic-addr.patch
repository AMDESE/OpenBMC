From c13b3e926fd7c9a6e8aed50e225c3a69f4a2f874 Mon Sep 17 00:00:00 2001
From: Mohsen Dolaty <mohsen.dolaty@amd.com>
Date: Tue, 1 Mar 2022 15:09:31 -0600
Subject: [PATCH 1/1] linux-aspeed: set APML devs to dynamic addr

I3C driver changes to send SET DASA to APML devices (except
for I3C Mux)
Also set the I3C Bus ID to static addr as defined in ARM DTS as bus_id

Signed-off-by: Mohsen Dolaty <mohsen.dolaty@amd.com>
---
 drivers/i3c/master.c               | 14 ++++++++++++++
 drivers/i3c/master/dw-i3c-master.c | 18 ++++++++++++++++--
 include/linux/i3c/master.h         |  1 +
 3 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/drivers/i3c/master.c b/drivers/i3c/master.c
index cd6dd27f0474..6b88bf5167de 100644
--- a/drivers/i3c/master.c
+++ b/drivers/i3c/master.c
@@ -19,6 +19,8 @@

 #include "internals.h"

+#define I3C_MUX_SA 0x70
+
 static DEFINE_IDR(i3c_bus_idr);
 static DEFINE_MUTEX(i3c_core_lock);

@@ -1519,6 +1521,13 @@ static int i3c_master_pre_assign_dyn_addr(struct i3c_dev_desc *dev)
 	if (master->jdec_spd) {
 		dev->info.dyn_addr = dev->boardinfo->init_dyn_addr;
 		ret = i3c_master_reattach_i3c_dev(dev, dev->info.static_addr);
+		if(master->set_dasa) {
+			if(dev->info.static_addr !=  I3C_MUX_SA) { // Do Not issue SET DASA for I3C Mux
+				i3c_master_setdasa_locked(master, dev->info.static_addr, dev->boardinfo->init_dyn_addr);
+				pr_err( "i3c_master_pre_assign_dyn_addr: Reattach Bus %x SA %x to DA %x\n",
+				master->bus.id, dev->info.static_addr, dev->boardinfo->init_dyn_addr );
+			}
+		}
 	} else {
 		ret = i3c_master_setdasa_locked(master, dev->info.static_addr,
 					dev->boardinfo->init_dyn_addr);
@@ -2208,6 +2217,11 @@ static int of_populate_i3c_bus(struct i3c_master_controller *master)
 	if (of_get_property(i3cbus_np, "jdec-spd", NULL)) {
 		master->jdec_spd = 1;
 	}
+	if (of_get_property(i3cbus_np, "set_dasa", NULL)) {
+		master->set_dasa = 1;
+	}
+
+	ret = of_property_read_u32(i3cbus_np, "bus_id", &master->bus.id);

 	for_each_available_child_of_node(i3cbus_np, node) {
 		ret = of_i3c_master_add_dev(master, node);
diff --git a/drivers/i3c/master/dw-i3c-master.c b/drivers/i3c/master/dw-i3c-master.c
index 7bea4d7e922c..2b811020b5a6 100644
--- a/drivers/i3c/master/dw-i3c-master.c
+++ b/drivers/i3c/master/dw-i3c-master.c
@@ -21,7 +21,7 @@
 #include <linux/slab.h>

 //#define IBI_WIP
-#define CCC_WORKAROUND
+//#define CCC_WORKAROUND
 #define DEVICE_CTRL			0x0
 #define DEV_CTRL_ENABLE			BIT(31)
 #define DEV_CTRL_RESUME			BIT(30)
@@ -210,6 +210,10 @@
 #define DEV_ADDR_TABLE_STATIC_ADDR(x)	((x) & GENMASK(6, 0))
 #define DEV_ADDR_TABLE_LOC(start, idx)	((start) + ((idx) << 2))

+#define DEV_ADDR_TABLE_LOC_OFFSET    0x280
+#define HW_RETRY_3_MASK              0x60000000
+#define NUM_OF_APML_DEVICES          3
+
 #define MAX_DEVS 32

 #define I3C_BUS_SDR1_SCL_RATE		8000000
@@ -536,8 +540,10 @@ static void dw_i3c_master_end_xfer_locked(struct dw_i3c_master *master, u32 isr)
 		case RESPONSE_ERROR_OVER_UNDER_FLOW:
 			ret = -ENOSPC;
 			break;
-		case RESPONSE_ERROR_I2C_W_NACK_ERR:
 		case RESPONSE_ERROR_ADDRESS_NACK:
+			ret = -ECONNREFUSED;
+			break;
+		case RESPONSE_ERROR_I2C_W_NACK_ERR:
 		default:
 			ret = -EINVAL;
 			break;
@@ -1326,6 +1332,7 @@ static int dw_i3c_probe(struct platform_device *pdev)
 {
 	struct dw_i3c_master *master;
 	int ret, irq;
+	u32 i3c_data, i3c_reg, i;

 	master = devm_kzalloc(&pdev->dev, sizeof(*master), GFP_KERNEL);
 	if (!master)
@@ -1408,6 +1415,13 @@ static int dw_i3c_probe(struct platform_device *pdev)
 	}
 	pr_err( "dw_i3c_probe: Done " "Register dev %s, bus %d\n",
                 dev_name(&pdev->dev), master->base.bus.id );
+	// set HW Retry to 3 times for NAK
+	for(i=0; i<NUM_OF_APML_DEVICES; i++) {
+		i3c_reg = DEV_ADDR_TABLE_LOC_OFFSET + i*4;
+		i3c_data = readl(master->regs + i3c_reg);
+		i3c_data = i3c_data | HW_RETRY_3_MASK ;
+		writel(i3c_data, master->regs + i3c_reg);
+	}
 	return 0;

 err_assert_rst:
diff --git a/include/linux/i3c/master.h b/include/linux/i3c/master.h
index 11cdcc062b3e..daf80ed69c3b 100644
--- a/include/linux/i3c/master.h
+++ b/include/linux/i3c/master.h
@@ -488,6 +488,7 @@ struct i3c_master_controller {
 	unsigned int secondary : 1;
 	unsigned int init_done : 1;
 	unsigned int jdec_spd : 1;
+	unsigned int set_dasa : 1;
 	struct {
 		struct list_head i3c;
 		struct list_head i2c;
--
2.25.1
