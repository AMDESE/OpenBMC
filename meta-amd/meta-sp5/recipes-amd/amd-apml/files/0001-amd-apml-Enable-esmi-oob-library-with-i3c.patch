From 873ae23413cc752b58bcda0c26649c269a9ea88c Mon Sep 17 00:00:00 2001
From: Supreeth Venkatesh <supreeth.venkatesh@amd.com>
Date: Tue, 15 Feb 2022 11:21:12 -0600
Subject: [PATCH 1/1] amd-apml: Enable esmi oob library with i3c
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit

Enables esmi oob library with i3c.
Copy of UAPI header file is copied to esmi_oob include folder to resolve
compilation issues.
Further set-apml.sh script is included as part of the scripts directory.

Signed-off-by: Supreeth Venkatesh <supreeth.venkatesh@amd.com>
---
 CMakeLists.txt            |   2 +
 include/esmi_oob/i3cdev.h |  38 ++++++++
 scripts/set-apml.sh       | 194 ++++++++++++++++++++++++++++++++++++++
 src/esmi_oob/esmi_i3c.c   |   2 +-
 4 files changed, 235 insertions(+), 1 deletion(-)
 create mode 100644 include/esmi_oob/i3cdev.h
 create mode 100644 scripts/set-apml.sh

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 93a3db5..a404506 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -172,6 +172,8 @@ install(FILES ${SOURCE_DIR}/include/esmi_oob/esmi_rmi.h
                                         DESTINATION include)
 install(FILES ${SOURCE_DIR}/include/esmi_oob/esmi_tsi.h
                                         DESTINATION include)
+install(FILES ${SOURCE_DIR}/include/esmi_oob/i3cdev.h
+                                        DESTINATION include)
 install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${SMI_TOOL}
 					DESTINATION bin)
 install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${SMI_EXAMPLE_EXE}
diff --git a/include/esmi_oob/i3cdev.h b/include/esmi_oob/i3cdev.h
new file mode 100644
index 0000000..0897313
--- /dev/null
+++ b/include/esmi_oob/i3cdev.h
@@ -0,0 +1,38 @@
+/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
+/*
+ * Copyright (c) 2019 Synopsys, Inc. and/or its affiliates.
+ *
+ * Author: Vitor Soares <vitor.soares@synopsys.com>
+ */
+
+#ifndef _UAPI_I3C_DEV_H_
+#define _UAPI_I3C_DEV_H_
+
+#include <linux/types.h>
+#include <linux/ioctl.h>
+
+/* IOCTL commands */
+#define I3C_DEV_IOC_MAGIC	0x07
+
+/**
+ * struct i3c_ioc_priv_xfer - I3C SDR ioctl private transfer
+ * @data: Holds pointer to userspace buffer with transmit data.
+ * @len: Length of data buffer buffers, in bytes.
+ * @rnw: encodes the transfer direction. true for a read, false for a write
+ */
+struct i3c_ioc_priv_xfer {
+	__u64 data;
+	__u16 len;
+	__u8 rnw;
+	__u8 pad[5];
+};
+
+
+#define I3C_PRIV_XFER_SIZE(N)	\
+	((((sizeof(struct i3c_ioc_priv_xfer)) * (N)) < (1 << _IOC_SIZEBITS)) \
+	? ((sizeof(struct i3c_ioc_priv_xfer)) * (N)) : 0)
+
+#define I3C_IOC_PRIV_XFER(N)	\
+	_IOC(_IOC_READ|_IOC_WRITE, I3C_DEV_IOC_MAGIC, 30, I3C_PRIV_XFER_SIZE(N))
+
+#endif
diff --git a/scripts/set-apml.sh b/scripts/set-apml.sh
new file mode 100644
index 0000000..452d31b
--- /dev/null
+++ b/scripts/set-apml.sh
@@ -0,0 +1,194 @@
+#!/bin/bash
+
+# Read board_id from u-boot env
+board_id=`/sbin/fw_printenv -n board_id`
+num_of_cpu=1
+
+# i2c BUS
+DEV_I2C_2="/dev/i2c-2"
+DEV_I2C_3="/dev/i2c-3"
+I2C_BUS=2
+I2C_MUX=0x70
+
+# i3c bus
+I3C_TOOL="/usr/bin/i3ctransfer"
+DEV_I3C_PATH="/sys/bus/platform/drivers/dw-i3c-master"
+DEV_I3C_4="1e7a6000.i3c4"
+DEV_I3C_5="1e7a7000.i3c5"
+I3C_MUX_0="/dev/i3c-4-4cc00000000"
+I3C_MUX_1="/dev/i3c-5-4cc00000000"
+i3c_mux_present=0
+
+DEV_I3C_SBTSI_PATH="/sys/bus/i3c/drivers/sbtsi_i3c"
+DEV_I3C_SBTSI_4="4-22400000001"
+DEV_I3C_SBTSI_5="5-22400000001"
+
+# DEV_I3C_SBRMI_PATH="/sys/bus/i3c/drivers/sbrmi_i3c"
+# DEV_I3C_SBRMI_4="4-22400000002"
+# DEV_I3C_SBRMI_5="5-22400000002"
+
+# check num of cpu
+check_num_of_cpu()
+{
+    # If no board_id then set num of cpu to 2 socket
+    case "$board_id" in
+        "40" | "41" | "42")
+            echo " Onyx 1 CPU"
+            num_of_cpu=1
+            ;;
+        "46" | "47" | "48")
+            echo " Ruby 1 CPU"
+            num_of_cpu=1
+            ;;
+        "43" | "44" | "45")
+            echo " Quartz 2 CPU"
+            num_of_cpu=2
+            ;;
+        "49" | "4A" |"4a" | "4B" | "4b")
+            echo " Titanite 2 CPU "
+            num_of_cpu=2
+            ;;
+        *)
+            num_of_cpu=2
+            ;;
+    esac
+}
+# Set i2c APML
+set_i2c_apml()
+{
+    echo "Setting I2C-2 Mux for CPU APML "
+    i2cset -f -y $I2C_BUS $I2C_MUX 0x46 0x01 || retval=$?
+    if [[ "$retval" -ne 0 ]]; then
+        echo "Error: Setting I2C Mux Reg 0x46"
+    fi
+    i2cset -f -y $I2C_BUS $I2C_MUX 0x40 0x40 || retval=$?
+    if [[ "$retval" -ne 0 ]]; then
+        echo "Error: Setting I2C Mux Reg 0x40"
+    fi
+    i2cset -f -y $I2C_BUS $I2C_MUX 0x41 0x40 || retval=$?
+    if [[ "$retval" -ne 0 ]]; then
+        echo "Error: Setting I2C Mux Reg 0x46"
+    fi
+    if [ -a "$DEV_I2C_3" ]
+    then
+        echo "Setting I2C-3 Mux for CPU APML "
+        I2C_BUS=3
+        i2cset -f -y $I2C_BUS $I2C_MUX 0x46 0x01 || retval=$?
+        if [[ "$retval" -ne 0 ]]; then
+            echo "Error: Setting I2C Mux Reg 0x46"
+        fi
+        i2cset -f -y $I2C_BUS $I2C_MUX 0x40 0x40 || retval=$?
+        if [[ "$retval" -ne 0 ]]; then
+            echo "Error: Setting I2C Mux Reg 0x40"
+        fi
+        i2cset -f -y $I2C_BUS $I2C_MUX 0x41 0x40 || retval=$?
+        if [[ "$retval" -ne 0 ]]; then
+            echo "Error: Setting I2C Mux Reg 0x46"
+        fi
+    fi
+}
+
+# Set i3c APML
+set_i3c_apml()
+{
+    echo "Setting I3C Mux for CPU 0 APML "
+    if [ -a "$I3C_MUX_0" ]
+    then
+        $I3C_TOOL -d $I3C_MUX_0 -w 0x46 -r 1 > /dev/null 2>&1
+        if [[ $? -ne 0 ]]
+        then
+            echo "I3C Mux 0 not present"
+            i3c_mux_present=0
+        else
+            echo "I3C Mux 0 present"
+            i3c_mux_present=1
+        fi
+    else
+        i3c_mux_present=0
+    fi
+    if [[ $i3c_mux_present == 0 ]]
+    then
+        # Unbind sbtsi driver
+        echo  $DEV_I3C_SBTSI_4 > $DEV_I3C_SBTSI_PATH/unbind
+        # echo  $DEV_I3C_SBRMI_4 > $DEV_I3C_SBRMI_PATH/unbind
+        sleep 1
+        # Unbind platform i3c driver
+        echo  $DEV_I3C_4 > $DEV_I3C_PATH/unbind
+        sleep 1
+        # Bind platform i3c driver
+        echo  $DEV_I3C_4 > $DEV_I3C_PATH/bind
+        sleep 1
+    fi
+    $I3C_TOOL -d $I3C_MUX_0 -w 0x46,0x00,0x01
+    $I3C_TOOL -d $I3C_MUX_0 -w 0x40,0x00,0x40
+    $I3C_TOOL -d $I3C_MUX_0 -w 0x41,0x00,0x40
+
+    # Unbind sbtsi driver
+    echo  $DEV_I3C_SBTSI_4 > $DEV_I3C_SBTSI_PATH/unbind
+    # echo  $DEV_I3C_SBRMI_4 > $DEV_I3C_SBRMI_PATH/unbind
+    sleep 1
+    # Unbind platform i3c driver
+    echo  $DEV_I3C_4 > $DEV_I3C_PATH/unbind
+    sleep 1
+    # Bind platform i3c driver
+    echo  $DEV_I3C_4 > $DEV_I3C_PATH/bind
+
+    if [[ $num_of_cpu == 2 ]]
+    then
+        echo "Setting I3C Mux for CPU 1 APML "
+        if [ -a "$I3C_MUX_1" ]
+        then
+            $I3C_TOOL -d $I3C_MUX_1 -w 0x46 -r 1 > /dev/null 2>&1
+            if [[ $? -ne 0 ]]
+            then
+                echo "I3C Mux 1 not present"
+                i3c_mux_present=0
+            else
+                echo "I3C Mux 1 present"
+                i3c_mux_present=1
+            fi
+        else
+            i3c_mux_present=0
+        fi
+        if [[ $i3c_mux_present == 0 ]]
+        then
+            # Unbind sbtsi driver
+            echo  $DEV_I3C_SBTSI_5 > $DEV_I3C_SBTSI_PATH/unbind
+            # echo  $DEV_I3C_SBRMI_5 > $DEV_I3C_SBRMI_PATH/unbind
+            sleep 1
+            # Unbind platform i3c driver
+            echo  $DEV_I3C_5 > $DEV_I3C_PATH/unbind
+            sleep 1
+            # Bind platform i3c driver
+            echo  $DEV_I3C_5 > $DEV_I3C_PATH/bind
+            sleep 1
+        fi
+        $I3C_TOOL -d $I3C_MUX_1 -w 0x46,0x00,0x01
+        $I3C_TOOL -d $I3C_MUX_1 -w 0x40,0x00,0x40
+        $I3C_TOOL -d $I3C_MUX_1 -w 0x41,0x00,0x40
+        # Unbind sbtsi driver
+        echo  $DEV_I3C_SBTSI_5 > $DEV_I3C_SBTSI_PATH/unbind
+        # echo  $DEV_I3C_SBRMI_5 > $DEV_I3C_SBRMI_PATH/unbind
+        sleep 1
+        # Unbind platform i3c driver
+        echo  $DEV_I3C_5 > $DEV_I3C_PATH/unbind
+        sleep 1
+        # Bind platform i3c driver
+        echo  $DEV_I3C_5 > $DEV_I3C_PATH/bind
+    fi
+}
+
+
+# Main()
+#---------
+
+# check num of cpu
+check_num_of_cpu
+
+# check for i2c vs i3c
+if [ -a "$DEV_I2C_2" ]
+then
+    set_i2c_apml
+else
+    set_i3c_apml
+fi
diff --git a/src/esmi_oob/esmi_i3c.c b/src/esmi_oob/esmi_i3c.c
index 6b61c20..1913dca 100644
--- a/src/esmi_oob/esmi_i3c.c
+++ b/src/esmi_oob/esmi_i3c.c
@@ -49,7 +49,7 @@
 #include <i2c/smbus.h>
 #include <string.h>

-#include <linux/i3cdev.h>
+#include <esmi_oob/i3cdev.h>
 #include <esmi_oob/esmi_common.h>
 #include <esmi_oob/esmi_i2c.h>

--
2.17.1

