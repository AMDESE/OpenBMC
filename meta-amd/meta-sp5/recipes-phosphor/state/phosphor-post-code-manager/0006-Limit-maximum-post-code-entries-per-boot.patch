From 9d7d31b82ca77d572433a20a4965822fbb982b2d Mon Sep 17 00:00:00 2001
From: Rajaganesh Rathinasabapathi <Rajaganesh.Rathinasabapathi@amd.com>
Date: Thu, 26 May 2022 05:20:08 -0500
Subject: [PATCH] Limit maximum post code entries per boot

Limiting the max number of post code entries per boot
to 6000.

Signed-off-by: Rajaganesh Rathinasabapathi <Rajaganesh.Rathinasabapathi@amd.com>
---
 src/post_code.cpp | 37 +++++++++++++++++++++++++++----------
 1 file changed, 27 insertions(+), 10 deletions(-)

diff --git a/src/post_code.cpp b/src/post_code.cpp
index 4006297..1ac769a 100644
--- a/src/post_code.cpp
+++ b/src/post_code.cpp
@@ -24,6 +24,8 @@
 #define POST_TXT_PATH "/var/lib/phosphor-post-code-manager/host0"
 #define PS_STR_BUFF_SIZE 128
 #define POST_TXT_FILE "-hex.txt"
+#define MAX_POST_CODE_PER_BOOT  (6000)
+#define ERR_LOG_LIMIT (100)

 PostCodeDataHolder* PostCodeDataHolder::instance = 0;

@@ -138,18 +140,33 @@ void PostCode::savePostCodes(postcode_t code)
         tsUS = usTimeOffset + firstPostCodeUsSinceEpoch;
     }

-    postCodes.insert(std::make_pair(tsUS, code));
+    // On rare occasions, development BIOS sends POST codes in infinite loop (bug)
+    // This fills up our log storage (/var/lib/phosphor-post-code-manager)
+    // We'll discard newer, repeating POST code entries when it exceeds limit.
+    if (postCodes.size() >= MAX_POST_CODE_PER_BOOT)
+    {
+        // print once every 100 entries, to avoid spam
+        if ((postCodes.size() % ERR_LOG_LIMIT) == 0)
+        {
+            std::cerr << "Maximum POST entries limit reached."
+                      << "Discarding new entries." << std::endl;
+        }
+    }
+    else
+    {
+        postCodes.insert(std::make_pair(tsUS, code));

-    writeLCD(code);
+        // save latest post code to text file
+        // for debugging current boot remotely - OPENBMC-632
+        std::ofstream post_text;
+        sprintf(post_file,"%s/%d%s",POST_TXT_PATH, currentBootCycleCount(), POST_TXT_FILE);
+        post_text.open (post_file, std::ios::out | std::ios::app);
+        sprintf(ts_post, "%lld : %llx\n", tsUS, std::get<uint64_t>(code));
+        post_text << ts_post;
+        post_text.close();
+    }

-    // save latest LCD post code to text file
-    // for debugging current boot remotely - OPENBMC-632
-    std::ofstream post_text;
-    sprintf(post_file,"%s/%d%s",POST_TXT_PATH, currentBootCycleCount(), POST_TXT_FILE);
-    post_text.open (post_file, std::ios::out | std::ios::app);
-    sprintf(ts_post, "%lld : %llx\n", tsUS, std::get<uint64_t>(code));
-    post_text << ts_post;
-    post_text.close();
+    writeLCD(code);

 #ifdef ENABLE_BIOS_POST_CODE_LOG
     std::ostringstream hexCode;
