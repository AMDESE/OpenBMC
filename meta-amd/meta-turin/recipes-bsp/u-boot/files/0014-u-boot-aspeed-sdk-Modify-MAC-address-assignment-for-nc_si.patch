From 77cbec0fd4f8a2309b5c6f7c662113d41ef6d863 Mon Sep 17 00:00:00 2001
From: Vinu Vaghasia <vinu.vaghasia@amd.com>
Date: Mon, 31 Jan 2022 11:41:50 -0600
Subject: [PATCH 1/1] u-boot-aspeed-sdk: Modify MAC address assignment for
 NC-SI

Modified u-boot code to assign the MAC address to NC-SI interface
Added nc-si configuration with u-boot device tree
---
 arch/arm/dts/ast2600-hawaii.dts |  9 +++++++++
 net/eth-uclass.c                | 16 ++++++++++++++--
 2 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/arch/arm/dts/ast2600-hawaii.dts b/arch/arm/dts/ast2600-hawaii.dts
index 97764f145c..7db50325c8 100644
--- a/arch/arm/dts/ast2600-hawaii.dts
+++ b/arch/arm/dts/ast2600-hawaii.dts
@@ -22,6 +22,7 @@
 		spi1 = &spi1;
 		spi2 = &spi2;
 		ethernet0 = &mac3;
+		ethernet1 = &mac2;
 	};

 	cpus {
@@ -65,6 +66,14 @@
 	};
 };

+&mac2 {
+	status = "okay";
+	phy-mode = "NC-SI";
+	use-ncsi;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_rmii3_default &pinctrl_rmii3rclk_default>;
+};
+
 &mac3 {
 	status = "okay";
 	phy-mode = "rgmii";
diff --git a/net/eth-uclass.c b/net/eth-uclass.c
index 98d09c628f..aa629b93c9 100644
--- a/net/eth-uclass.c
+++ b/net/eth-uclass.c
@@ -16,7 +16,9 @@

 DECLARE_GLOBAL_DATA_PTR;

-#define I2C_MAC_OFFSET 0x8
+#define I2C_MAC_OFFSET1 0x8
+#define I2C_MAC_OFFSET2 0x10
+

 /**
  * struct eth_device_priv - private structure for each Ethernet device
@@ -504,7 +506,17 @@ static int eth_post_probe(struct udevice *dev)

 	if (!eth_env_get_enetaddr_by_index("eth", dev->seq, env_enetaddr)) {
 		i2c_set_bus_num(CONFIG_SYS_I2C_EEPROM_BUS);
-		ret = i2c_read(CONFIG_SYS_I2C_EEPROM_ADDR, I2C_MAC_OFFSET, CONFIG_SYS_I2C_EEPROM_ADDR_LEN, env_enetaddr, ARP_HLEN);
+
+		if (dev->seq == 0) {
+			ret = i2c_read(CONFIG_SYS_I2C_EEPROM_ADDR, I2C_MAC_OFFSET1, CONFIG_SYS_I2C_EEPROM_ADDR_LEN, env_enetaddr, ARP_HLEN);
+		}
+		else if (dev->seq == 1) {
+			ret = i2c_read(CONFIG_SYS_I2C_EEPROM_ADDR, I2C_MAC_OFFSET2, CONFIG_SYS_I2C_EEPROM_ADDR_LEN, env_enetaddr, ARP_HLEN);
+		}
+		else {
+			printf("Warning: No MAC address on EEPROM for this interface\n");
+		}
+
 		if (ret < 0) {
 			printf("Error : Retrieving MAC from EEPROM Failed\n");
 		}
--
2.17.1

