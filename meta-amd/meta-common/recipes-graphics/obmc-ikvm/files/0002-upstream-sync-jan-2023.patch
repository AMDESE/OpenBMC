From 992b654a4eab380671365a3e0e880bcc3d875d4f Mon Sep 17 00:00:00 2001
From: Rajaganesh Rathinasabapathi <Rajaganesh.Rathinasabapathi@amd.com>
Date: Mon, 23 Jan 2023 23:13:12 -0600
Subject: [PATCH] upstream sync jan 2023

Signed-off-by: Rajaganesh Rathinasabapathi <Rajaganesh.Rathinasabapathi@amd.com>
---
 create_usbhid.sh | 37 ++++++++++++++------------
 ikvm_args.cpp    | 25 ++++++++++++++++--
 ikvm_args.hpp    | 39 +++++++++++++++++++++++++--
 ikvm_input.cpp   | 68 +++++++++++++++++++++++++++++++-----------------
 ikvm_input.hpp   | 12 ++++++---
 ikvm_manager.cpp |  8 +++---
 ikvm_server.cpp  | 30 ++++++++++++++++++---
 ikvm_server.hpp  |  9 ++++---
 ikvm_video.cpp   | 28 +++++++++++++-------
 ikvm_video.hpp   | 25 +++++++++++++++---
 meson.build      |  3 ++-
 11 files changed, 212 insertions(+), 72 deletions(-)

diff --git a/create_usbhid.sh b/create_usbhid.sh
index d1fa4e0..f6085dd 100644
--- a/create_usbhid.sh
+++ b/create_usbhid.sh
@@ -6,7 +6,7 @@ dev_name="1e6a0000.usb-vhub"
 create_hid() {
     # create gadget
     mkdir "${hid_conf_directory}"
-    cd "${hid_conf_directory}"
+    cd "${hid_conf_directory}" || exit 1

     # add basic information
     echo 0x0100 > bcdDevice
@@ -61,13 +61,13 @@ create_hid() {
     #  0x29, 0x65, //   USAGE_MAXIMUM (Keyboard Application)
     #  0x81, 0x00, //   INPUT (Data,Ary,Abs)
     #  0xc0        // END_COLLECTION
-    echo -ne '\x05\x01\x09\x06\xa1\x01\x05\x07\x19\xe0\x29\xe7\x15\x00\x25\x01\x75\x01\x95\x08\x81\x02\x95\x01\x75\x08\x81\x03\x95\x05\x75\x01\x05\x08\x19\x01\x29\x05\x91\x02\x95\x01\x75\x03\x91\x03\x95\x06\x75\x08\x15\x00\x25\x65\x05\x07\x19\x00\x29\x65\x81\x00\xc0' > functions/hid.0/report_desc
+    printf '\x05\x01\x09\x06\xa1\x01\x05\x07\x19\xe0\x29\xe7\x15\x00\x25\x01\x75\x01\x95\x08\x81\x02\x95\x01\x75\x08\x81\x03\x95\x05\x75\x01\x05\x08\x19\x01\x29\x05\x91\x02\x95\x01\x75\x03\x91\x03\x95\x06\x75\x08\x15\x00\x25\x65\x05\x07\x19\x00\x29\x65\x81\x00\xc0' > functions/hid.0/report_desc

     # Create HID mouse function
     mkdir functions/hid.1

     echo 2 > functions/hid.1/protocol	# 2: mouse
-    echo 5 > functions/hid.1/report_length
+    echo 6 > functions/hid.1/report_length
     echo 1 > functions/hid.1/subclass

     # Binary HID mouse descriptor (absolute coordinate)
@@ -99,15 +99,23 @@ create_hid() {
     #  0x75, 0x10,       //     REPORT_SIZE (16)
     #  0x95, 0x02,       //     REPORT_COUNT (2)
     #  0x81, 0x02,       //     INPUT (Data,Var,Abs)
+    #  0x09, 0x38,       //     Usage (Wheel)
+    #  0x15, 0xff,       //     LOGICAL_MINIMUM (-1)
+    #  0x25, 0x01,       //     LOGICAL_MAXIMUM (1)
+    #  0x35, 0x00,       //     PHYSICAL_MINIMUM (-127)
+    #  0x45, 0x00,       //     PHYSICAL_MAXIMUM (127)
+    #  0x75, 0x08,       //     REPORT_SIZE (8)
+    #  0x95, 0x01,       //     REPORT_COUNT (1)
+    #  0x81, 0x06,       //     INPUT (Data,Var,Rel)
     #  0xc0,             //   END_COLLECTION
     #  0xc0              // END_COLLECTION
-    echo -ne '\x05\x01\x09\x02\xa1\x01\x09\x01\xa1\x00\x05\x09\x19\x01\x29\x03\x15\x00\x25\x01\x95\x03\x75\x01\x81\x02\x95\x01\x75\x05\x81\x03\x05\x01\x09\x30\x09\x31\x35\x00\x46\xff\x7f\x15\x00\x26\xff\x7f\x65\x11\x55\x00\x75\x10\x95\x02\x81\x02\xc0\xc0' > functions/hid.1/report_desc
+    printf '\x05\x01\x09\x02\xa1\x01\x09\x01\xa1\x00\x05\x09\x19\x01\x29\x03\x15\x00\x25\x01\x95\x03\x75\x01\x81\x02\x95\x01\x75\x05\x81\x03\x05\x01\x09\x30\x09\x31\x35\x00\x46\xff\x7f\x15\x00\x26\xff\x7f\x65\x11\x55\x00\x75\x10\x95\x02\x81\x02\x09\x38\x15\xff\x25\x01\x35\x00\x45\x00\x75\x08\x95\x01\x81\x06\xc0\xc0' > functions/hid.1/report_desc

     # Create configuration
     mkdir configs/c.1
     mkdir configs/c.1/strings/0x409

-    echo 0x80 > configs/c.1/bmAttributes
+    echo 0xe0 > configs/c.1/bmAttributes
     echo 200 > configs/c.1/MaxPower
     echo "" > configs/c.1/strings/0x409/configuration

@@ -117,13 +125,13 @@ create_hid() {
 }

 connect_hid() {
-    if ! [[ `cat UDC` =~ "${dev_name}:p" ]]; then
+    if ! grep -q "${dev_name}:p" UDC; then
         i=0
         num_ports=5
         base_usb_dir="/sys/bus/platform/devices/${dev_name}/${dev_name}:p"
-        while [ $i -lt $num_ports ]; do
-            port=$(($i + 1))
-            i=$port
+        while [ "${i}" -lt "${num_ports}" ]; do
+            port=$(("${i}" + 1))
+            i="${port}"
             if [ ! -e "${base_usb_dir}${port}/gadget/suspended" ]; then
                 break
             fi
@@ -133,17 +141,15 @@ connect_hid() {
 }

 disconnect_hid() {
-    if [[ `cat UDC` =~ "${dev_name}:p" ]]; then
+    if grep -q "${dev_name}:p" UDC; then
         echo "" > UDC
     fi
 }

-original_directory="$(pwd)"
-
 if [ ! -e "${hid_conf_directory}" ]; then
     create_hid
 else
-    cd "${hid_conf_directory}"
+    cd "${hid_conf_directory}" || exit 1
 fi

 if [ "$1" = "connect" ]; then
@@ -151,7 +157,6 @@ if [ "$1" = "connect" ]; then
 elif [ "$1" = "disconnect" ]; then
     disconnect_hid
 else
-    echo "Invalid option: $1. Use 'connect' or 'disconnect'."
+    echo >&2 "Invalid option: $1. Use 'connect' or 'disconnect'."
+    exit 1
 fi
-
-cd "${original_directory}"
diff --git a/ikvm_args.cpp b/ikvm_args.cpp
index ad5b4f7..4887870 100644
--- a/ikvm_args.cpp
+++ b/ikvm_args.cpp
@@ -8,15 +8,19 @@
 namespace ikvm
 {

-Args::Args(int argc, char* argv[]) : frameRate(30), commandLine(argc, argv)
+Args::Args(int argc, char* argv[]) :
+    frameRate(30), subsampling(0), calcFrameCRC{false}, commandLine(argc, argv)
 {
     int option;
-    const char* opts = "f:h:k:p:v:";
+    const char* opts = "f:s:h:k:p:u:v:c";
     struct option lopts[] = {{"frameRate", 1, 0, 'f'},
+                             {"subsampling", 1, 0, 's'},
                              {"help", 0, 0, 'h'},
                              {"keyboard", 1, 0, 'k'},
                              {"mouse", 1, 0, 'p'},
+                             {"udcName", 1, 0, 'u'},
                              {"videoDevice", 1, 0, 'v'},
+                             {"calcCRC", 0, 0, 'c'},
                              {0, 0, 0, 0}};

     while ((option = getopt_long(argc, argv, opts, lopts, NULL)) != -1)
@@ -28,6 +32,11 @@ Args::Args(int argc, char* argv[]) : frameRate(30), commandLine(argc, argv)
                 if (frameRate < 0 || frameRate > 60)
                     frameRate = 30;
                 break;
+            case 's':
+                subsampling = (int)strtol(optarg, NULL, 0);
+                if (subsampling < 0 || subsampling > 1)
+                    subsampling = 0;
+                break;
             case 'h':
                 printUsage();
                 exit(0);
@@ -37,9 +46,15 @@ Args::Args(int argc, char* argv[]) : frameRate(30), commandLine(argc, argv)
             case 'p':
                 pointerPath = std::string(optarg);
                 break;
+            case 'u':
+                udcName = std::string(optarg);
+                break;
             case 'v':
                 videoPath = std::string(optarg);
                 break;
+            case 'c':
+                calcFrameCRC = true;
+                break;
         }
     }
 }
@@ -50,10 +65,16 @@ void Args::printUsage()
     fprintf(stderr, "OpenBMC IKVM daemon\n");
     fprintf(stderr, "Usage: obmc-ikvm [options]\n");
     fprintf(stderr, "-f frame rate          try this frame rate\n");
+    fprintf(stderr, "-s subsampling         try this subsampling\n");
     fprintf(stderr, "-h, --help             show this message and exit\n");
     fprintf(stderr, "-k device              HID keyboard gadget device\n");
     fprintf(stderr, "-p device              HID mouse gadget device\n");
+    fprintf(stderr,
+            "-u udc name            UDC that HID gadget will connect to\n");
     fprintf(stderr, "-v device              V4L2 device\n");
+    fprintf(
+        stderr,
+        "-c, --calcCRC          Calculate CRC for each frame to save bandwidth\n");
     rfbUsage();
 }

diff --git a/ikvm_args.hpp b/ikvm_args.hpp
index f877d32..cb3d3ad 100644
--- a/ikvm_args.hpp
+++ b/ikvm_args.hpp
@@ -25,8 +25,7 @@ class Args
          * @param[in] v - Array of arguments
          */
         CommandLine(int c, char** v) : argc(c), argv(v)
-        {
-        }
+        {}
         ~CommandLine() = default;
         CommandLine(const CommandLine&) = default;
         CommandLine& operator=(const CommandLine&) = default;
@@ -71,6 +70,16 @@ class Args
         return frameRate;
     }

+    /*
+     * @brief Get the video subsampling
+     *
+     * @return Value of the video subsampling
+     */
+    inline int getSubsampling() const
+    {
+        return subsampling;
+    }
+
     /*
      * @brief Get the path to the USB keyboard device
      *
@@ -91,6 +100,16 @@ class Args
         return pointerPath;
     }

+    /*
+     * @brief Get the name of UDC
+     *
+     * @return Reference to the string storing the name of UDC
+     */
+    inline const std::string& getUdcName() const
+    {
+        return udcName;
+    }
+
     /*
      * @brief Get the path to the V4L2 video device
      *
@@ -101,6 +120,16 @@ class Args
         return videoPath;
     }

+    /*
+     * @brief Get the identical frames detection setting
+     *
+     * @return True if identical frames detection is enabled
+     */
+    inline bool getCalcFrameCRC() const
+    {
+        return calcFrameCRC;
+    }
+
   private:
     /* @brief Prints the application usage to stderr */
     void printUsage();
@@ -110,12 +139,18 @@ class Args
      *        stream
      */
     int frameRate;
+    /* @brief Desired subsampling (0: 444, 1: 420) */
+    int subsampling;
     /* @brief Path to the USB keyboard device */
     std::string keyboardPath;
     /* @brief Path to the USB mouse device */
     std::string pointerPath;
+    /* @brief Name of UDC */
+    std::string udcName;
     /* @brief Path to the V4L2 video device */
     std::string videoPath;
+    /* @brief Identical frames detection */
+    bool calcFrameCRC;
     /* @brief Original command line arguments passed to the application */
     CommandLine commandLine;
 };
diff --git a/ikvm_input.cpp b/ikvm_input.cpp
index 480db3c..107756b 100644
--- a/ikvm_input.cpp
+++ b/ikvm_input.cpp
@@ -1,6 +1,7 @@
 #include "ikvm_input.hpp"

 #include "ikvm_server.hpp"
+#include "scancodes.hpp"

 #include <err.h>
 #include <errno.h>
@@ -14,8 +15,6 @@
 #include <phosphor-logging/log.hpp>
 #include <xyz/openbmc_project/Common/File/error.hpp>

-#include "scancodes.hpp"
-
 namespace fs = std::filesystem;

 namespace ikvm
@@ -24,9 +23,11 @@ namespace ikvm
 using namespace phosphor::logging;
 using namespace sdbusplus::xyz::openbmc_project::Common::File::Error;

-Input::Input(const std::string& kbdPath, const std::string& ptrPath) :
-    keyboardFd(-1), pointerFd(-1), keyboardReport{0}, pointerReport{0},
-    keyboardPath(kbdPath), pointerPath(ptrPath)
+Input::Input(const std::string& kbdPath, const std::string& ptrPath,
+             const std::string& udc) :
+    keyboardFd(-1),
+    pointerFd(-1), keyboardReport{0}, pointerReport{0}, keyboardPath(kbdPath),
+    pointerPath(ptrPath), udcName(udc)
 {
     hidUdcStream.exceptions(std::ofstream::failbit | std::ofstream::badbit);
     hidUdcStream.open(hidUdcPath, std::ios::out | std::ios::app);
@@ -52,16 +53,23 @@ void Input::connect()
 {
     try
     {
-        for (const auto& port : fs::directory_iterator(usbVirtualHubPath))
+        if (udcName.empty())
         {
-            if (fs::is_directory(port) && !fs::is_symlink(port) &&
-                !fs::exists(port.path() / "gadget/suspended"))
+            for (const auto& port : fs::directory_iterator(usbVirtualHubPath))
             {
-                const std::string portId = port.path().filename();
-                hidUdcStream << portId << std::endl;
-                break;
+                if (fs::is_directory(port) && !fs::is_symlink(port) &&
+                    !fs::exists(port.path() / "gadget/suspended"))
+                {
+                    const std::string portId = port.path().filename();
+                    hidUdcStream << portId << std::endl;
+                    break;
+                }
             }
         }
+        else // If UDC has been specified by '-u' parameter, connect to it.
+        {
+            hidUdcStream << udcName << std::endl;
+        }
     }
     catch (fs::filesystem_error& e)
     {
@@ -78,8 +86,8 @@ void Input::connect()

     if (!keyboardPath.empty())
     {
-        keyboardFd = open(keyboardPath.c_str(),
-                          O_RDWR | O_CLOEXEC | O_NONBLOCK);
+        keyboardFd =
+            open(keyboardPath.c_str(), O_RDWR | O_CLOEXEC | O_NONBLOCK);
         if (keyboardFd < 0)
         {
             log<level::ERR>("Failed to open input device",
@@ -213,8 +221,25 @@ void Input::pointerEvent(int buttonMask, int x, int y, rfbClientPtr cl)
         return;
     }

-    input->pointerReport[0] = ((buttonMask & 0x4) >> 1) |
-                              ((buttonMask & 0x2) << 1) | (buttonMask & 0x1);
+    if (buttonMask > 4)
+    {
+        input->pointerReport[0] = 0;
+        if (buttonMask == 8)
+        {
+            input->pointerReport[5] = 1;
+        }
+        else if (buttonMask == 16)
+        {
+            input->pointerReport[5] = 0xff;
+        }
+    }
+    else
+    {
+        input->pointerReport[0] = ((buttonMask & 0x4) >> 1) |
+                                  ((buttonMask & 0x2) << 1) |
+                                  (buttonMask & 0x1);
+        input->pointerReport[5] = 0;
+    }

     if (x >= 0 && (unsigned int)x < video.getWidth())
     {
@@ -486,7 +511,7 @@ uint8_t Input::keyToScancode(rfbKeySym key)
     return scancode;
 }

-bool Input::writeKeyboard(const uint8_t *report)
+bool Input::writeKeyboard(const uint8_t* report)
 {
     std::unique_lock<std::mutex> lk(keyMutex);
     uint retryCount = HID_REPORT_RETRY_MAX;
@@ -495,7 +520,7 @@ bool Input::writeKeyboard(const uint8_t *report)
     {
         if (write(keyboardFd, report, KEY_REPORT_LENGTH) == KEY_REPORT_LENGTH)
         {
-            break;
+            return true;
         }

         if (errno != EAGAIN)
@@ -515,15 +540,10 @@ bool Input::writeKeyboard(const uint8_t *report)
         retryCount--;
     }

-    if (!retryCount || errno)
-    {
-        return false;
-    }
-
-    return true;
+    return false;
 }

-void Input::writePointer(const uint8_t *report)
+void Input::writePointer(const uint8_t* report)
 {
     std::unique_lock<std::mutex> lk(ptrMutex);
     uint retryCount = HID_REPORT_RETRY_MAX;
diff --git a/ikvm_input.hpp b/ikvm_input.hpp
index 558251d..83e4071 100644
--- a/ikvm_input.hpp
+++ b/ikvm_input.hpp
@@ -24,8 +24,10 @@ class Input
      *
      * @param[in] kbdPath - Path to the USB keyboard device
      * @param[in] ptrPath - Path to the USB mouse device
+     * @param[in] udc - Name of UDC
      */
-    Input(const std::string& kbdPath, const std::string& ptrPath);
+    Input(const std::string& kbdPath, const std::string& ptrPath,
+          const std::string& udc);
     ~Input();
     Input(const Input&) = default;
     Input& operator=(const Input&) = default;
@@ -61,7 +63,7 @@ class Input
   private:
     static constexpr int NUM_MODIFIER_BITS = 4;
     static constexpr int KEY_REPORT_LENGTH = 8;
-    static constexpr int PTR_REPORT_LENGTH = 5;
+    static constexpr int PTR_REPORT_LENGTH = 6;

     /* @brief HID modifier bits mapped to shift and control key codes */
     static constexpr uint8_t shiftCtrlMap[NUM_MODIFIER_BITS] = {
@@ -98,8 +100,8 @@ class Input
      */
     static uint8_t keyToScancode(rfbKeySym key);

-    bool writeKeyboard(const uint8_t *report);
-    void writePointer(const uint8_t *report);
+    bool writeKeyboard(const uint8_t* report);
+    void writePointer(const uint8_t* report);

     /* @brief File descriptor for the USB keyboard device */
     int keyboardFd;
@@ -113,6 +115,8 @@ class Input
     std::string keyboardPath;
     /* @brief Path to the USB mouse device */
     std::string pointerPath;
+    /* @brief Name of UDC */
+    std::string udcName;
     /*
      * @brief Mapping of RFB key code to report data index to keep track
      *        of which keys are down
diff --git a/ikvm_manager.cpp b/ikvm_manager.cpp
index d56110d..93fd1ce 100644
--- a/ikvm_manager.cpp
+++ b/ikvm_manager.cpp
@@ -7,11 +7,11 @@ namespace ikvm

 Manager::Manager(const Args& args) :
     continueExecuting(true), serverDone(false), videoDone(true),
-    input(args.getKeyboardPath(), args.getPointerPath()),
-    video(args.getVideoPath(), input, args.getFrameRate()),
+    input(args.getKeyboardPath(), args.getPointerPath(), args.getUdcName()),
+    video(args.getVideoPath(), input, args.getFrameRate(),
+          args.getSubsampling()),
     server(args, input, video)
-{
-}
+{}

 void Manager::run()
 {
diff --git a/ikvm_server.cpp b/ikvm_server.cpp
index 8ddd3fa..141f6c6 100644
--- a/ikvm_server.cpp
+++ b/ikvm_server.cpp
@@ -2,6 +2,7 @@

 #include <rfb/rfbproto.h>

+#include <boost/crc.hpp>
 #include <phosphor-logging/elog-errors.hpp>
 #include <phosphor-logging/elog.hpp>
 #include <phosphor-logging/log.hpp>
@@ -16,7 +17,7 @@ using namespace sdbusplus::xyz::openbmc_project::Common::Error;
 Server::Server(const Args& args, Input& i, Video& v) :
     pendingResize(false), frameCounter(0), numClients(0), input(i), video(v)
 {
-    std::string ip("any");
+    std::string ip("localhost");
     const Args::CommandLine& commandLine = args.getCommandLine();
     int argc = commandLine.argc;

@@ -54,6 +55,8 @@ Server::Server(const Args& args, Input& i, Video& v) :
     server->ptrAddEvent = Input::pointerEvent;

     processTime = (1000000 / video.getFrameRate()) - 100;
+
+    calcFrameCRC = args.getCalcFrameCRC();
 }

 Server::~Server()
@@ -93,6 +96,7 @@ void Server::sendFrame()
     char* data = video.getData();
     rfbClientIteratorPtr it;
     rfbClientPtr cl;
+    int64_t frame_crc = -1;

     if (!data || pendingResize)
     {
@@ -121,6 +125,26 @@ void Server::sendFrame()
         {
             continue;
         }
+
+        if (calcFrameCRC)
+        {
+            if (frame_crc == -1)
+            {
+                /* JFIF header contains some varying data so skip it for
+                 * checksum calculation */
+                frame_crc =
+                    boost::crc<32, 0x04C11DB7, 0xFFFFFFFF, 0xFFFFFFFF, true,
+                               true>(data + 0x30, video.getFrameSize() - 0x30);
+            }
+
+            if (cd->last_crc == frame_crc)
+            {
+                continue;
+            }
+
+            cd->last_crc = frame_crc;
+        }
+
         cd->needUpdate = false;

         if (cl->enableLastRectEncoding)
@@ -154,9 +178,9 @@ void Server::sendFrame()
 }

 void Server::clientFramebufferUpdateRequest(
-    rfbClientPtr cl, rfbFramebufferUpdateRequestMsg *furMsg)
+    rfbClientPtr cl, rfbFramebufferUpdateRequestMsg* furMsg)
 {
-    ClientData *cd = (ClientData *)cl->clientData;
+    ClientData* cd = (ClientData*)cl->clientData;

     if (!cd)
         return;
diff --git a/ikvm_server.hpp b/ikvm_server.hpp
index ebe4ad2..dcb984a 100644
--- a/ikvm_server.hpp
+++ b/ikvm_server.hpp
@@ -30,7 +30,7 @@ class Server
          * @param[in] s - Number of frames to skip when client connects
          * @param[in] i - Pointer to Input object
          */
-        ClientData(int s, Input* i) : skipFrame(s), input(i)
+        ClientData(int s, Input* i) : skipFrame(s), input(i), last_crc{-1}
         {
             needUpdate = false;
         }
@@ -43,6 +43,7 @@ class Server
         int skipFrame;
         Input* input;
         bool needUpdate;
+        int64_t last_crc;
     };

     /*
@@ -93,8 +94,8 @@ class Server
      * @param[in] furMsg - Pointer of the FUR message
      */
     static void
-    clientFramebufferUpdateRequest(rfbClientPtr cl,
-                                   rfbFramebufferUpdateRequestMsg *furMsg);
+        clientFramebufferUpdateRequest(rfbClientPtr cl,
+                                       rfbFramebufferUpdateRequestMsg* furMsg);
     /*
      * @brief Handler for a client disconnecting
      *
@@ -127,6 +128,8 @@ class Server
     Video& video;
     /* @brief Default framebuffer storage */
     std::vector<char> framebuffer;
+    /* @brief Identical frames detection */
+    bool calcFrameCRC;
     /* @brief Cursor bitmap width */
     static constexpr int cursorWidth = 20;
     /* @brief Cursor bitmap height */
diff --git a/ikvm_video.cpp b/ikvm_video.cpp
index 7bd4b4e..734294e 100644
--- a/ikvm_video.cpp
+++ b/ikvm_video.cpp
@@ -30,11 +30,11 @@ using namespace phosphor::logging;
 using namespace sdbusplus::xyz::openbmc_project::Common::File::Error;
 using namespace sdbusplus::xyz::openbmc_project::Common::Device::Error;

-Video::Video(const std::string& p, Input& input, int fr) :
+Video::Video(const std::string& p, Input& input, int fr, int sub) :
     resizeAfterOpen(false), timingsError(false), fd(-1), frameRate(fr),
-    lastFrameIndex(-1), height(600), width(800), input(input), path(p)
-{
-}
+    lastFrameIndex(-1), height(600), width(800), subSampling(sub), input(input),
+    path(p)
+{}

 Video::~Video()
 {
@@ -267,13 +267,10 @@ void Video::resize()
         rc = ioctl(fd, VIDIOC_QUERY_DV_TIMINGS, &timings);
         if (rc < 0)
         {
-            log<level::ERR>("Failed to query timings",
+            log<level::ERR>("Failed to query timings, restart",
                             entry("ERROR=%s", strerror(errno)));
-            elog<ReadFailure>(
-                xyz::openbmc_project::Common::Device::ReadFailure::
-                    CALLOUT_ERRNO(errno),
-                xyz::openbmc_project::Common::Device::ReadFailure::
-                    CALLOUT_DEVICE_PATH(path.c_str()));
+            restart();
+            return;
         }

         rc = ioctl(fd, VIDIOC_S_DV_TIMINGS, &timings);
@@ -381,6 +378,7 @@ void Video::start()
     v4l2_capability cap;
     v4l2_format fmt;
     v4l2_streamparm sparm;
+    v4l2_control ctrl;

     if (fd >= 0)
     {
@@ -447,6 +445,16 @@ void Video::start()
                             entry("ERROR=%s", strerror(errno)));
     }

+    ctrl.id = V4L2_CID_JPEG_CHROMA_SUBSAMPLING;
+    ctrl.value = subSampling ? V4L2_JPEG_CHROMA_SUBSAMPLING_420
+                             : V4L2_JPEG_CHROMA_SUBSAMPLING_444;
+    rc = ioctl(fd, VIDIOC_S_CTRL, &ctrl);
+    if (rc < 0)
+    {
+        log<level::WARNING>("Failed to set video jpeg subsampling",
+                            entry("ERROR=%s", strerror(errno)));
+    }
+
     height = fmt.fmt.pix.height;
     width = fmt.fmt.pix.width;

diff --git a/ikvm_video.hpp b/ikvm_video.hpp
index fb8c5da..17477df 100644
--- a/ikvm_video.hpp
+++ b/ikvm_video.hpp
@@ -23,7 +23,7 @@ class Video
      * @param[in] input - Reference to the Input object
      * @param[in] fr    - desired frame rate of the video
      */
-    Video(const std::string& p, Input& input, int fr = 30);
+    Video(const std::string& p, Input& input, int fr = 30, int sub = 0);
     ~Video();
     Video(const Video&) = default;
     Video& operator=(const Video&) = default;
@@ -93,6 +93,24 @@ class Video
     {
         return width;
     }
+    /*
+     * @brief Gets the subsampling of the video frame
+     *
+     * @return Value of the subsampling of video frame, 1:420/0:444
+     */
+    inline int getSubsampling() const
+    {
+        return subSampling;
+    }
+    /*
+     * @brief Sets the subsampling of the video frame
+     *
+     * @return Value of the subsampling of video frame, 1:420/0:444
+     */
+    inline void setSubsampling(int _sub)
+    {
+        subSampling = _sub;
+    }

     /* @brief Number of bits per component of a pixel */
     static const int bitsPerSample;
@@ -110,8 +128,7 @@ class Video
     struct Buffer
     {
         Buffer() : data(nullptr), queued(false), payload(0), size(0)
-        {
-        }
+        {}
         ~Buffer() = default;
         Buffer(const Buffer&) = default;
         Buffer& operator=(const Buffer&) = default;
@@ -141,6 +158,8 @@ class Video
     size_t height;
     /* @brief Width in pixels of the video frame */
     size_t width;
+    /* @brief jpeg's subsampling, 1:420/0:444 */
+    int subSampling;
     /* @brief Reference to the Input object */
     Input& input;
     /* @brief Path to the V4L2 video device */
diff --git a/meson.build b/meson.build
index dbc4612..3f08d17 100644
--- a/meson.build
+++ b/meson.build
@@ -4,9 +4,10 @@ project(
     version: '1.0',
     license: 'GPLv2',
     default_options: [
-        'cpp_std=c++17',
+        'cpp_std=c++20',
         'werror=true',
     ],
+    meson_version: '>=0.57.0',
 )

 install_data(
