From db1c932594e86aa1e1ccfd31cb417f88dd8530a6 Mon Sep 17 00:00:00 2001
From: Rajaganesh Rathinasabapathi <Rajaganesh.Rathinasabapathi@amd.com>
Date: Mon, 2 Aug 2021 03:11:59 -0500
Subject: [PATCH] save version info to persistent store

Signed-off-by: Rajaganesh Rathinasabapathi <Rajaganesh.Rathinasabapathi@amd.com>
---
 activation.cpp   | 22 ++++++++++++++++++++++
 item_updater.cpp | 29 ++++++++++++++++++++++++++---
 item_updater.hpp | 17 ++++++++++++++---
 3 files changed, 62 insertions(+), 6 deletions(-)

diff --git a/activation.cpp b/activation.cpp
index 234eb7b..79971c1 100644
--- a/activation.cpp
+++ b/activation.cpp
@@ -12,10 +12,21 @@
 #include <xyz/openbmc_project/Common/error.hpp>
 #include <xyz/openbmc_project/Software/Version/error.hpp>

+#include <cereal/archives/json.hpp>
+
 #ifdef WANT_SIGNATURE_VERIFY
 #include "image_verify.hpp"
 #endif

+#define    SET_VER(file)        { \
+            std::ofstream os(PERSIST_DIR file); \
+            { \
+                cereal::JSONOutputArchive oarchive(os);\
+                oarchive(cereal::make_nvp(ACTIVE_VER_KEY, parent.versions.find(versionId)->second->version())); \
+            } \
+            os.close();\
+}
+
 namespace phosphor
 {
 namespace software
@@ -490,6 +501,9 @@ void Activation::onStateChangesBios(sdbusplus::message::message& msg)
             activation(softwareServer::Activation::Activations::Active);

             log<level::INFO>("Bios upgrade completed successfully.");
+            parent.biosVersion->version(
+                parent.versions.find(versionId)->second->version());
+            SET_VER(BIOS_VER_FILE);
         }
         else if (newStateResult == "failed")
         {
@@ -552,6 +566,10 @@ void Activation::onStateChangesScmFpga(sdbusplus::message::message& msg)
             activation(softwareServer::Activation::Activations::Active);

             log<level::INFO>("SCM FPGA upgrade completed successfully.");
+            parent.scmfpgaVersion->version(
+                parent.versions.find(versionId)->second->version());
+            SET_VER(SCM_VER_FILE);
+
         }
         else if (newStateResult == "failed")
         {
@@ -614,6 +632,10 @@ void Activation::onStateChangesHpmFpga(sdbusplus::message::message& msg)
             activation(softwareServer::Activation::Activations::Active);

             log<level::INFO>("HPM FPGA upgrade completed successfully.");
+            parent.hpmfpgaVersion->version(
+                parent.versions.find(versionId)->second->version());
+            SET_VER(HPM_VER_FILE);
+
         }
         else if (newStateResult == "failed")
         {
diff --git a/item_updater.cpp b/item_updater.cpp
index 2e8e7d5..908543e 100644
--- a/item_updater.cpp
+++ b/item_updater.cpp
@@ -14,12 +14,30 @@
 #include <xyz/openbmc_project/Common/error.hpp>
 #include <xyz/openbmc_project/Software/Image/error.hpp>

+#include <cereal/archives/json.hpp>
+
 #include <filesystem>
 #include <fstream>
 #include <queue>
 #include <set>
 #include <string>

+#define GET_VER(file)   {\
+        std::string line; \
+        std::ifstream is(PERSIST_DIR file, std::ios::in); \
+        try \
+        { \
+            cereal::JSONInputArchive iarchive(is); \
+                iarchive(cereal::make_nvp(ACTIVE_VER_KEY, line)); \
+            version = line.c_str(); \
+        } \
+        catch (cereal::Exception& e) \
+        { \
+            fs::remove_all(path); \
+        } \
+        is.close(); \
+    }
+
 namespace phosphor
 {
 namespace software
@@ -772,7 +790,8 @@ void ItemUpdater::createBIOSObject()
     createFunctionalAssociation(path);

     auto versionId = path.substr(pos + 1);
-    auto version = "null";
+    auto version = "Unknown";
+    GET_VER(BIOS_VER_FILE);
     AssociationList assocs = {};
     biosActivation = std::make_unique<Activation>(
         bus, path, *this, versionId, server::Activation::Activations::Active,
@@ -806,7 +825,9 @@ void ItemUpdater::createSCMFPGAObject()
     createFunctionalAssociation(path);

     auto versionId = path.substr(pos + 1);
-    auto version = "null";
+    auto version = "Unknown";
+    GET_VER(SCM_VER_FILE);
+
     AssociationList assocs = {};
     scmfpgaActivation = std::make_unique<Activation>(
         bus, path, *this, versionId, server::Activation::Activations::Active,
@@ -840,7 +861,9 @@ void ItemUpdater::createHPMFPGAObject()
     createFunctionalAssociation(path);

     auto versionId = path.substr(pos + 1);
-    auto version = "null";
+    auto version = "Unknown";
+    GET_VER(HPM_VER_FILE);
+
     AssociationList assocs = {};
     hpmfpgaActivation = std::make_unique<Activation>(
         bus, path, *this, versionId, server::Activation::Activations::Active,
diff --git a/item_updater.hpp b/item_updater.hpp
index 1af40c2..096cc3d 100644
--- a/item_updater.hpp
+++ b/item_updater.hpp
@@ -13,6 +13,17 @@
 #include <string>
 #include <vector>

+#ifdef HOST_BIOS_UPGRADE
+#define BIOS_VER_FILE	"bios_ver"
+#endif
+#ifdef SCM_FPGA_UPGRADE
+#define SCM_VER_FILE	"scm_ver"
+#endif
+#ifdef HPM_FPGA_UPGRADE
+#define HPM_VER_FILE	"hpm_ver"
+#endif
+#define ACTIVE_VER_KEY	"active"
+
 namespace phosphor
 {
 namespace software
@@ -274,7 +285,7 @@ class ItemUpdater : public ItemUpdaterInherit

     /** @brief Persistent Activation D-Bus object for BIOS */
     std::unique_ptr<Activation> biosActivation;
-
+  public:
     /** @brief Persistent Version D-Bus object for BIOS */
     std::unique_ptr<VersionClass> biosVersion;
 #endif
@@ -290,7 +301,7 @@ class ItemUpdater : public ItemUpdaterInherit

     /** @brief Persistent Activation D-Bus object for SCM FPGA */
     std::unique_ptr<Activation> scmfpgaActivation;
-
+  public:
     /** @brief Persistent Version D-Bus object for SCM FPGA */
     std::unique_ptr<VersionClass> scmfpgaVersion;
 #endif
@@ -306,7 +317,7 @@ class ItemUpdater : public ItemUpdaterInherit

     /** @brief Persistent Activation D-Bus object for HPM FPGA */
     std::unique_ptr<Activation> hpmfpgaActivation;
-
+  public:
     /** @brief Persistent Version D-Bus object for HPM FPGA */
     std::unique_ptr<VersionClass> hpmfpgaVersion;
 #endif
--
2.17.1

