From 4bc49112e8ce0847e873f31b98e692e41b9600e9 Mon Sep 17 00:00:00 2001
From: Mohsen Dolaty <mohsen.dolaty@amd.com>
Date: Sat, 16 Jul 2022 18:45:50 -0500
Subject: [PATCH 1/1] bmcweb: Add DIMM info to Redfish

Add DIMM Info to Redfish

Signed-off-by: Mohsen Dolaty <mohsen.dolaty@amd.com>
---
 redfish-core/lib/memory.hpp | 40 +++++++++++++++++++++++++++++++++++--
 1 file changed, 38 insertions(+), 2 deletions(-)

diff --git a/redfish-core/lib/memory.hpp b/redfish-core/lib/memory.hpp
index 70886d2..3da4e0b 100644
--- a/redfish-core/lib/memory.hpp
+++ b/redfish-core/lib/memory.hpp
@@ -50,6 +50,14 @@ inline std::string translateMemoryTypeToRedfish(const std::string& memoryType)
     {
         return "DDR4";
     }
+    if (memoryType == "xyz.openbmc_project.Inventory.Item.Dimm.DeviceType.DDR5")
+    {
+        return "DDR5";
+    }
+    if (memoryType == "xyz.openbmc_project.Inventory.Item.Dimm.DeviceType.DDR6")
+    {
+        return "DDR6";
+    }
     if (memoryType ==
         "xyz.openbmc_project.Inventory.Item.Dimm.DeviceType.DDR4E_SDRAM")
     {
@@ -471,9 +479,17 @@ inline void getDimmDataByService(std::shared_ptr<bmcweb::AsyncResp> aResp,
                     return;
                 }
                 aResp->res.jsonValue["CapacityMiB"] = (*memorySize >> 10);
+                if (*memorySize == 0)
+                {
+                    aResp->res.jsonValue["Status"]["State"] = "Absent";
+                    return;
+                }
+                else
+                {
+                    aResp->res.jsonValue["Status"]["State"] = "Enabled";
+                    aResp->res.jsonValue["Status"]["Health"] = "OK";
+                }
             }
-            aResp->res.jsonValue["Status"]["State"] = "Enabled";
-            aResp->res.jsonValue["Status"]["Health"] = "OK";

             for (const auto& property : properties)
             {
@@ -487,6 +503,26 @@ inline void getDimmDataByService(std::shared_ptr<bmcweb::AsyncResp> aResp,
                     }
                     aResp->res.jsonValue["DataWidthBits"] = *value;
                 }
+                else if (property.first == "MemoryDeviceLocator")
+                {
+                    const std::string* value =
+                        std::get_if<std::string>(&property.second);
+                    if (value == nullptr)
+                    {
+                        continue;
+                    }
+                    aResp->res.jsonValue["Name"] = *value;
+                }
+                else if (property.first == "MemoryTypeDetail")
+                {
+                    const std::string* value =
+                        std::get_if<std::string>(&property.second);
+                    if (value == nullptr)
+                    {
+                        continue;
+                    }
+                    aResp->res.jsonValue["VendorID"] = *value;
+                }
                 else if (property.first == "PartNumber")
                 {
                     const std::string* value =
--
2.25.1
