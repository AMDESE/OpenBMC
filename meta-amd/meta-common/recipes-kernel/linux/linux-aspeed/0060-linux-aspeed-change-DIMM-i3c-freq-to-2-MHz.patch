From 1f2aaaa51cefcad8c06c57b594cc2a47c833263b Mon Sep 17 00:00:00 2001
From: Mohsen Dolaty <mohsen.dolaty@amd.com>
Date: Thu, 15 Jun 2023 16:12:34 -0500
Subject: [PATCH 1/1] linux-aspeed: change DIMM i3c freq to 2 MHz

Due to HW issues, BMC will access DIMM on i3c bus on 2 MHz frequency
instead of 12.5 MHz
Also adjust H and L count calculation to get a more accurate Frequency

Signed-off-by: Mohsen Dolaty <mohsen.dolaty@amd.com>
---
 arch/arm/boot/dts/aspeed-g6.dtsi   | 34 +++++++-----------------------
 drivers/i3c/master/dw-i3c-master.c |  8 ++++---
 2 files changed, 13 insertions(+), 29 deletions(-)

diff --git a/arch/arm/boot/dts/aspeed-g6.dtsi b/arch/arm/boot/dts/aspeed-g6.dtsi
index 8bac051736b2..7dad4a388dd6 100644
--- a/arch/arm/boot/dts/aspeed-g6.dtsi
+++ b/arch/arm/boot/dts/aspeed-g6.dtsi
@@ -6,8 +6,6 @@
 #include <dt-bindings/interrupt-controller/aspeed-scu-irq.h>
 #include <dt-bindings/clock/ast2600-clock.h>

-//#define DIMM_I3C_6_MHZ
-
 / {
 	model = "Aspeed BMC";
 	compatible = "aspeed,ast2600";
@@ -1121,12 +1119,8 @@ i3c0: i3c0@2000 {
 		compatible = "snps,dw-i3c-master-1.00a";
 		clocks = <&syscon ASPEED_CLK_GATE_I3C0CLK>;
 		resets = <&syscon ASPEED_RESET_I3C0>;
-		i2c-scl-hz = <400000>;
-#ifdef DIMM_I3C_6_MHZ
-		i3c-scl-hz = <6000000>;
-#else
-		i3c-scl-hz = <12500000>;
-#endif
+		i2c-scl-hz = <100000>;
+		i3c-scl-hz = <2000000>;
 		interrupts = <GIC_SPI 102 IRQ_TYPE_LEVEL_HIGH>;
 		pinctrl-names = "default";
 		pinctrl-0 = <&pinctrl_i3c1_default>;
@@ -1143,12 +1137,8 @@ i3c1: i3c1@3000 {
 		compatible = "snps,dw-i3c-master-1.00a";
 		clocks = <&syscon ASPEED_CLK_GATE_I3C1CLK>;
 		resets = <&syscon ASPEED_RESET_I3C1>;
-		i2c-scl-hz = <400000>;
-#ifdef DIMM_I3C_6_MHZ
-                i3c-scl-hz = <6000000>;
-#else
-		i3c-scl-hz = <12500000>;
-#endif
+		i2c-scl-hz = <100000>;
+		i3c-scl-hz = <2000000>;
 		interrupts = <GIC_SPI 103 IRQ_TYPE_LEVEL_HIGH>;
 		pinctrl-names = "default";
 		pinctrl-0 = <&pinctrl_i3c2_default>;
@@ -1165,12 +1155,8 @@ i3c2: i3c2@4000 {
 		compatible = "snps,dw-i3c-master-1.00a";
 		clocks = <&syscon ASPEED_CLK_GATE_I3C2CLK>;
 		resets = <&syscon ASPEED_RESET_I3C2>;
-		i2c-scl-hz = <400000>;
-#ifdef DIMM_I3C_6_MHZ
-                i3c-scl-hz = <6000000>;
-#else
-		i3c-scl-hz = <12500000>;
-#endif
+		i2c-scl-hz = <100000>;
+		i3c-scl-hz = <2000000>;
 		interrupts = <GIC_SPI 104 IRQ_TYPE_LEVEL_HIGH>;
 		pinctrl-names = "default";
 		pinctrl-0 = <&pinctrl_i3c3_default>;
@@ -1187,12 +1173,8 @@ i3c3: i3c3@5000 {
 		compatible = "snps,dw-i3c-master-1.00a";
 		clocks = <&syscon ASPEED_CLK_GATE_I3C3CLK>;
 		resets = <&syscon ASPEED_RESET_I3C3>;
-		i2c-scl-hz = <400000>;
-#ifdef DIMM_I3C_6_MHZ
-                i3c-scl-hz = <6000000>;
-#else
-		i3c-scl-hz = <12500000>;
-#endif
+		i2c-scl-hz = <100000>;
+		i3c-scl-hz = <2000000>;
 		interrupts = <GIC_SPI 105 IRQ_TYPE_LEVEL_HIGH>;
 		pinctrl-names = "default";
 		pinctrl-0 = <&pinctrl_i3c4_default>;
diff --git a/drivers/i3c/master/dw-i3c-master.c b/drivers/i3c/master/dw-i3c-master.c
index 50f1d932f09f..d53ed346deb5 100644
--- a/drivers/i3c/master/dw-i3c-master.c
+++ b/drivers/i3c/master/dw-i3c-master.c
@@ -219,7 +219,7 @@
 #define NUM_OF_I3C_DEVICES           8
 #define SDA_DLY_TIMING_OFFSET        0xD0
 #define SDA_TX_HOLD_APML             0x00030000
-#define SDA_TX_HOLD_DIMM             0x00020000
+#define SDA_TX_HOLD_DIMM             0x00070000
 #define SDA_TX_MASK                  0xFFF8FFFF

 #define MAX_DEVS 32
@@ -722,6 +722,7 @@ static int dw_i3c_clk_cfg(struct dw_i3c_master *master)
 		writel(scl_timing, master->regs + SCL_I2C_FM_TIMING);
 		scl_timing = SCL_I2C_FMP_TIMING_HCNT(hcnt) | SCL_I2C_FMP_TIMING_LCNT(lcnt);
 		writel(scl_timing, master->regs + SCL_I2C_FMP_TIMING);
+		pr_info( "dw_i3c_clk_cfg: I2C Freq %d, SCL_H %d SCL_L %d \n", master->base.bus.scl_rate.i2c, scl_period_h, scl_period_l);

 		if (!(readl(master->regs + DEVICE_CTRL) & DEV_CTRL_I2C_SLAVE_PRESENT))
 			writel(BUS_I3C_MST_FREE(lcnt), master->regs + BUS_FREE_TIMING);
@@ -740,10 +741,11 @@ static int dw_i3c_clk_cfg(struct dw_i3c_master *master)
 			scl_period_h = I3C_BUS_PP_THIGH_MIN_NS;
 		if (scl_period_l < I3C_BUS_PP_TLOW_MIN_NS)
 			scl_period_l = I3C_BUS_PP_TLOW_MIN_NS;
-		hcnt = DIV_ROUND_UP(scl_period_h, core_period) + 1;
-		lcnt = DIV_ROUND_UP(scl_period_l, core_period) + 1;
+		hcnt = DIV_ROUND_UP(scl_period_h, core_period);
+		lcnt = DIV_ROUND_UP(scl_period_l, core_period);
 		scl_timing = SCL_I3C_TIMING_HCNT(hcnt) | SCL_I3C_TIMING_LCNT(lcnt);
 		writel(scl_timing, master->regs + SCL_I3C_PP_TIMING);
+		pr_info( "dw_i3c_clk_cfg: I3C Freq %d, Hcnt %d Lcnt %d \n", master->base.bus.scl_rate.i3c, hcnt, lcnt);
 	} else {
 		hcnt = DIV_ROUND_UP(I3C_BUS_THIGH_MAX_NS, core_period) - 1;
 		if (hcnt < SCL_I3C_TIMING_CNT_MIN)
--
2.25.1
