From 4c171e30f27594cf04c2841dd5a7e37bf2a23b31 Mon Sep 17 00:00:00 2001
From: Supreeth Venkatesh <supreeth.venkatesh@amd.com>
Date: Tue, 10 May 2022 12:25:40 -0500
Subject: [PATCH] amd-apml: Enable apml library with i3c

Enables apml oob library with i3c.
Copy of UAPI header file is copied to esmi_oob include folder to resolve
compilation issues.
Further set-apml.sh script is included as part of the scripts directory.

Remove all platform dependent code from set-apml.sh
Add new parameter to either bind or unbind drivers
handle both I2C and I3C cases
Add new I3C Mux set for Reg 0x0E for Titanite
Require num_of_cpu from u-boot env
Add start/stop for PID services

Signed-off-by: Supreeth Venkatesh <supreeth.venkatesh@amd.com>
Signed-off-by: Mohsen Dolaty <mohsen.dolaty@amd.com>
Signed-off-by: Mahesh Kurapati <mahesh.kurapati@amd.com>
---
 include/esmi_oob/amd-apml.h |  74 ++++++++++++
 include/esmi_oob/apml.h     |   2 +-
 scripts/set-apml.sh         | 220 ++++++++++++++++++++++++++++++++++++
 3 files changed, 295 insertions(+), 1 deletion(-)
 create mode 100644 include/esmi_oob/amd-apml.h
 create mode 100755 scripts/set-apml.sh

diff --git a/include/esmi_oob/amd-apml.h b/include/esmi_oob/amd-apml.h
new file mode 100644
index 0000000..cb8f6b2
--- /dev/null
+++ b/include/esmi_oob/amd-apml.h
@@ -0,0 +1,74 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Copyright (C) 2021-2022 Advanced Micro Devices, Inc.
+ */
+#ifndef _AMD_APML_H_
+#define _AMD_APML_H_
+
+#include <linux/types.h>
+
+enum apml_protocol {
+	APML_CPUID	= 0x1000,
+	APML_MCA_MSR,
+	APML_REG,
+};
+
+/* These are byte indexes into data_in and data_out arrays */
+#define RD_WR_DATA_INDEX	0
+#define REG_OFF_INDEX		0
+#define REG_VAL_INDEX		4
+#define THREAD_LOW_INDEX	4
+#define THREAD_HI_INDEX		5
+#define EXT_FUNC_INDEX		6
+#define RD_FLAG_INDEX		7
+
+#define MB_DATA_SIZE		4
+
+struct apml_message {
+	/* message ids:
+	 * Mailbox Messages:	0x0 ... 0x999
+	 * APML_CPUID:		0x1000
+	 * APML_MCA_MSR:	0x1001
+	 * APML_REG:		0x1002 (RMI & TSI reg access)
+	 */
+	__u32 cmd;
+
+	/*
+	 * 8 bit data for reg read,
+	 * 32 bit data in case of mailbox,
+	 * upto 64 bit in case of cpuid and mca msr
+	 */
+	union {
+		__u64 cpu_msr_out;
+		__u32 mb_out[2];
+		__u8 reg_out[8];
+	} data_out;
+
+	/*
+	 * [0]...[3] mailbox 32bit input
+	 *	     cpuid & mca msr,
+	 *	     rmi rd/wr: reg_offset
+	 * [4][5] cpuid & mca msr: thread
+	 * [4] rmi reg wr: value
+	 * [6] cpuid: ext function & read eax/ebx or ecx/edx
+	 *	[7:0] -> bits [7:4] -> ext function &
+	 *	bit [0] read eax/ebx or ecx/edx
+	 * [7] read/write functionality
+	 */
+	union {
+		__u64 cpu_msr_in;
+		__u32 mb_in[2];
+		__u8 reg_in[8];
+	} data_in;
+	/*
+	 * Status code is returned in case of CPUID/MCA access
+	 * Error code is returned in case of soft mailbox
+	 */
+	__u32 fw_ret_code;
+} __attribute__((packed));
+
+/* ioctl command for mailbox msgs using generic _IOWR */
+#define SBRMI_BASE_IOCTL_NR      0xF9
+#define SBRMI_IOCTL_CMD          _IOWR(SBRMI_BASE_IOCTL_NR, 0, struct apml_message)
+
+#endif /*_AMD_APML_H_*/
diff --git a/include/esmi_oob/apml.h b/include/esmi_oob/apml.h
index 98bb454..1906e29 100644
--- a/include/esmi_oob/apml.h
+++ b/include/esmi_oob/apml.h
@@ -7,7 +7,7 @@

 #include <stdbool.h>

-#include <linux/amd-apml.h>
+#include "amd-apml.h"
 #include "apml_err.h"

 /** \file apml.h
diff --git a/scripts/set-apml.sh b/scripts/set-apml.sh
new file mode 100755
index 0000000..344ccea
--- /dev/null
+++ b/scripts/set-apml.sh
@@ -0,0 +1,220 @@
+#!/bin/bash
+
+num_of_cpu=`/sbin/fw_printenv -n num_of_cpu`
+
+# i2c BUS
+DEV_I2C_2="/dev/i2c-2"
+DEV_I2C_3="/dev/i2c-3"
+I2C_BUS=2
+I2C_MUX=0x70
+
+DEV_I2C_SBTSI_PATH="/sys/bus/i2c/drivers/sbtsi"
+DEV_I2C_SBTSI_2="2-004c"
+DEV_I2C_SBTSI_3="3-0048"
+DEV_I2C_SBRMI_PATH="/sys/bus/i2c/drivers/sbrmi"
+DEV_I2C_SBRMI_2="2-003c"
+DEV_I2C_SBRMI_3="3-0038"
+
+# i3c bus
+I3C_TOOL="/usr/bin/i3ctransfer"
+DEV_I3C_PATH="/sys/bus/platform/drivers/ast2600-i3c-master"
+DEV_I3C_4="1e7a6000.i3c4"
+DEV_I3C_5="1e7a7000.i3c5"
+I3C_MUX_0="/dev/bus/i3c/4-4cc00000000"
+I3C_MUX_1="/dev/bus/i3c/5-4cc00000000"
+i3c_mux_present=0
+
+DEV_I3C_SBTSI_PATH="/sys/bus/i3c/drivers/sbtsi_i3c"
+DEV_I3C_SBTSI_4="4-22400000001"
+DEV_I3C_SBTSI_5="5-22400000001"
+
+DEV_I3C_SBRMI_PATH="/sys/bus/i3c/drivers/sbrmi_i3c"
+DEV_I3C_SBRMI_4="4-22400000002"
+DEV_I3C_SBRMI_5="5-22400000002"
+
+# Set i2c APML
+set_i2c_apml()
+{
+    echo "Setting I2C-2 Mux for CPU APML "
+    I2C_BUS=2
+    i2cset -f -y $I2C_BUS $I2C_MUX 0x46 0x01 || retval=$?
+    if [[ "$retval" -ne 0 ]]; then
+        echo "Error: Setting I2C Mux Reg 0x46"
+    fi
+    i2cset -f -y $I2C_BUS $I2C_MUX 0x40 0x40 || retval=$?
+    if [[ "$retval" -ne 0 ]]; then
+        echo "Error: Setting I2C Mux Reg 0x40"
+    fi
+    i2cset -f -y $I2C_BUS $I2C_MUX 0x41 0x40 || retval=$?
+    if [[ "$retval" -ne 0 ]]; then
+        echo "Error: Setting I2C Mux Reg 0x41"
+    fi
+    # bind sbtsi/sbrmi driver
+    echo  $DEV_I2C_SBTSI_2 > $DEV_I2C_SBTSI_PATH/bind
+    echo  $DEV_I2C_SBRMI_2 > $DEV_I2C_SBRMI_PATH/bind
+
+    if [ -a "$DEV_I2C_3" ]
+    then
+        echo "Setting I2C-3 Mux for CPU APML "
+        I2C_BUS=3
+        i2cset -f -y $I2C_BUS $I2C_MUX 0x46 0x01 || retval=$?
+        if [[ "$retval" -ne 0 ]]; then
+            echo "Error: Setting I2C Mux Reg 0x46"
+        fi
+        i2cset -f -y $I2C_BUS $I2C_MUX 0x40 0x40 || retval=$?
+        if [[ "$retval" -ne 0 ]]; then
+            echo "Error: Setting I2C Mux Reg 0x40"
+        fi
+        i2cset -f -y $I2C_BUS $I2C_MUX 0x41 0x40 || retval=$?
+        if [[ "$retval" -ne 0 ]]; then
+            echo "Error: Setting I2C Mux Reg 0x41"
+        fi
+        # bind sbtsi/sbrmi driver
+        echo  $DEV_I2C_SBTSI_3 > $DEV_I2C_SBTSI_PATH/bind
+        echo  $DEV_I2C_SBRMI_3 > $DEV_I2C_SBRMI_PATH/bind
+    fi
+}
+
+# unbind i2c drivers
+unbind_i2c_drivers()
+{
+    echo "Unbind i2c-2 SBRMI and SBTSI drivers "
+    I2C_BUS=2
+    # Unbind sbtsi/sbrmi driver
+    echo  $DEV_I2C_SBTSI_2 > $DEV_I2C_SBTSI_PATH/unbind
+    echo  $DEV_I2C_SBRMI_2 > $DEV_I2C_SBRMI_PATH/unbind
+    #disable i2c MUX
+    i2cset -f -y $I2C_BUS $I2C_MUX 0x40 0x00 || retval=$?
+    if [[ "$retval" -ne 0 ]]; then
+        echo "Error: Setting I2C Mux Reg 0x40"
+    fi
+    i2cset -f -y $I2C_BUS $I2C_MUX 0x41 0x00 || retval=$?
+    if [[ "$retval" -ne 0 ]]; then
+        echo "Error: Setting I2C Mux Reg 0x41"
+    fi
+    if [ -a "$DEV_I2C_3" ]
+    then
+        echo "unbind i2c-3 SBRMI and SBTSI drivers"
+        I2C_BUS=3
+        # Unbind sbtsi/sbrmi driver
+        echo  $DEV_I2C_SBTSI_3 > $DEV_I2C_SBTSI_PATH/unbind
+        echo  $DEV_I2C_SBRMI_3 > $DEV_I2C_SBRMI_PATH/unbind
+        #disable i2c MUX
+        i2cset -f -y $I2C_BUS $I2C_MUX 0x40 0x00 || retval=$?
+        if [[ "$retval" -ne 0 ]]; then
+            echo "Error: Setting I2C Mux Reg 0x40"
+        fi
+        i2cset -f -y $I2C_BUS $I2C_MUX 0x41 0x00 || retval=$?
+        if [[ "$retval" -ne 0 ]]; then
+            echo "Error: Setting I2C Mux Reg 0x41"
+        fi
+    fi
+}
+
+# Set i3c APML
+set_i3c_apml()
+{
+    echo "Setting I3C Mux for CPU 0 APML "
+
+    sleep 1
+    # Bind platform i3c driver
+    echo  $DEV_I3C_4 > $DEV_I3C_PATH/bind
+    sleep 1
+
+    $I3C_TOOL -d $I3C_MUX_0 -w 0x46,0x00,0x01
+    $I3C_TOOL -d $I3C_MUX_0 -w 0x0E,0x00,0x24
+    $I3C_TOOL -d $I3C_MUX_0 -w 0x40,0x00,0x40
+    $I3C_TOOL -d $I3C_MUX_0 -w 0x41,0x00,0x40
+
+    # Unbind sbtsi driver
+    echo  $DEV_I3C_SBTSI_4 > $DEV_I3C_SBTSI_PATH/unbind
+    echo  $DEV_I3C_SBRMI_4 > $DEV_I3C_SBRMI_PATH/unbind
+    sleep 1
+    # Unbind platform i3c driver
+    echo  $DEV_I3C_4 > $DEV_I3C_PATH/unbind
+    sleep 1
+    # Bind platform i3c driver
+    echo  $DEV_I3C_4 > $DEV_I3C_PATH/bind
+
+    if [[ $num_of_cpu == 2 ]]
+    then
+        sleep 1
+        # Bind platform i3c driver
+        echo  $DEV_I3C_5 > $DEV_I3C_PATH/bind
+        sleep 1
+
+        $I3C_TOOL -d $I3C_MUX_1 -w 0x46,0x00,0x01
+        $I3C_TOOL -d $I3C_MUX_1 -w 0x0E,0x00,0x24
+        $I3C_TOOL -d $I3C_MUX_1 -w 0x40,0x00,0x40
+        $I3C_TOOL -d $I3C_MUX_1 -w 0x41,0x00,0x40
+        # Unbind sbtsi driver
+        echo  $DEV_I3C_SBTSI_5 > $DEV_I3C_SBTSI_PATH/unbind
+        echo  $DEV_I3C_SBRMI_5 > $DEV_I3C_SBRMI_PATH/unbind
+        sleep 1
+        # Unbind platform i3c driver
+        echo  $DEV_I3C_5 > $DEV_I3C_PATH/unbind
+        sleep 1
+        # Bind platform i3c driver
+        echo  $DEV_I3C_5 > $DEV_I3C_PATH/bind
+    fi
+}
+
+# unbind i3c drivers
+unbind_i3c_drivers()
+{
+    # Unbind sbtsi and sbrmi drivers
+    echo  $DEV_I3C_SBTSI_4 > $DEV_I3C_SBTSI_PATH/unbind
+    echo  $DEV_I3C_SBRMI_4 > $DEV_I3C_SBRMI_PATH/unbind
+    # Unbind platform i3c driver
+    sleep 1
+    echo  $DEV_I3C_4 > $DEV_I3C_PATH/unbind
+
+    if [[ $num_of_cpu == 2 ]]
+    then
+        echo  $DEV_I3C_SBTSI_5 > $DEV_I3C_SBTSI_PATH/unbind
+        echo  $DEV_I3C_SBRMI_5 > $DEV_I3C_SBRMI_PATH/unbind
+        # Unbind platform i3c driver
+        sleep 1
+        echo  $DEV_I3C_5 > $DEV_I3C_PATH/unbind
+    fi
+}
+
+# Main()
+#---------
+
+# check num of cpu
+echo "Num of CPU " $num_of_cpu
+
+if [[ $1 == "i3c" ]];then
+    fw_setenv apml_i3c true
+    reboot now
+elif [[ $1 == "i2c" ]];then
+    fw_setenv apml_i3c false
+    reboot now
+elif [[ $1 == "bind" ]];then
+    if [[ -a "$DEV_I2C_2" ]];then
+        echo "Bind I2C Drivers"
+        set_i2c_apml
+    else
+        echo "Bind I3C Drivers"
+        set_i3c_apml
+    fi
+    systemctl start phosphor-pid-control.service
+elif [[ $1 == "unbind" ]];then
+    systemctl stop phosphor-pid-control.service
+    if [[ -a "$DEV_I2C_2" ]];then
+        echo "UnBind I2C Drivers"
+        unbind_i2c_drivers
+    else
+        echo "UnBind I3C Drivers"
+        unbind_i3c_drivers
+    fi
+else
+    echo "set-apml.sh takes a single string as input"
+    echo "    i3c    = set APML to I3C mode, and Reboot"
+    echo "    i2c    = set APML to I2C mode, and Reboot"
+    echo "    bind   = Bind   I2C/I3C drivers for APML"
+    echo "    unbind = Unbind I2C/I3C drivers for APML"
+    echo "APML mode is"
+    fw_printenv |grep apml_i3c
+fi
--
2.25.1
