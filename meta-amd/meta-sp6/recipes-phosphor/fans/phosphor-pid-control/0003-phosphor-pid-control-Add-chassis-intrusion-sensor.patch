From 76ef4a67ec62488009767add9012d3bdd05bf95d Mon Sep 17 00:00:00 2001
From: Rajaganesh Rathinasabapathi <Rajaganesh.Rathinasabapathi@amd.com>
Date: Wed, 15 Mar 2023 01:53:16 -0500
Subject: [PATCH] phosphor-pid-control: Add chassis intrusion sensor

Added Chassis intrusion sensor monitoring to swampd

Signed-off-by: Rajaganesh Rathinasabapathi <Rajaganesh.Rathinasabapathi@amd.com>
---
 Makefile.am |  1 +
 main.cpp    |  3 +++
 util.cpp    | 60 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 util.hpp    |  1 +
 4 files changed, 65 insertions(+)

diff --git a/Makefile.am b/Makefile.am
index 7465a72..e6321f2 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -59,6 +59,7 @@ setsensor_CXXFLAGS = \
 swampd_SOURCES = main.cpp
 swampd_LDADD = \
 	$(SDBUSPLUS_LIBS) \
+	-lpthread \
 	libswampd.la
 swampd_CXXFLAGS = \
 	$(SDBUSPLUS_CFLAGS) \
diff --git a/main.cpp b/main.cpp
index db15b8d..916a96c 100644
--- a/main.cpp
+++ b/main.cpp
@@ -293,6 +293,9 @@ int main(int argc, char* argv[])

     pid_control::tryRestartControlLoops();

+    /* start chassis intrusion monitor */
+    pid_control::chassisIntrusionMonitor();
+
     io.run();
     return 0;
 }
diff --git a/util.cpp b/util.cpp
index 4ecd8ce..186f961 100644
--- a/util.cpp
+++ b/util.cpp
@@ -21,6 +21,12 @@
 #include <iostream>
 #include <map>
 #include <string>
+#include <filesystem>
+#include <fstream>
+#include <iostream>
+#include <thread>
+#define CHASSIS_INTRUDED         (0)
+#define INTRUSION_POLL_INTERVAL  (1)

 namespace pid_control
 {
@@ -96,4 +102,58 @@ void debugPrint(const std::map<std::string, conf::SensorConfig>& sensorConfig,
     std::cout << "}\n\n";
 }

+void chassisIntrusionMonitor()
+{
+    /* AST2500/2600 chass intrusion controller dev path */
+    const std::string driver_path = "/sys/devices/platform/ahb/ahb:apb/1e6ef010.chassis/hwmon/";
+    const std::string hwmon_filename = "/intrusion0_alarm";
+    std::string hwmon_folder;
+
+    /* we don't know hwmon folder's number in path, search platform.
+       driver creates only one hwmon folder, break on first result */
+    if (std::filesystem::exists (driver_path))
+    {
+        for (const auto& folder : std::filesystem::directory_iterator(driver_path))
+        {
+            hwmon_folder = folder.path();
+            break;
+        }
+
+        /* check for intrusion sysfs file, 0 -> assert, 1 -> deassert */
+        if (std::filesystem::exists (hwmon_folder + hwmon_filename))
+        {
+            /* create polling thread, interval 1 sec (phosphor-hwmon default interval) */
+            std::thread([hwmon_folder, hwmon_filename](){
+                std::ifstream hfile;
+                unsigned int alarm_status;
+                unsigned int prev_status = 0xFF;
+                while(1) {
+                    std::this_thread::sleep_for(std::chrono::seconds(INTRUSION_POLL_INTERVAL));
+                    hfile.open(hwmon_folder + hwmon_filename);
+                    hfile >> alarm_status;
+                    hfile.close();
+                    if(prev_status != alarm_status)
+                    {
+                        prev_status = alarm_status;
+                        if(alarm_status == CHASSIS_INTRUDED)
+                        {
+                            phosphor::logging::log<phosphor::logging::level::ERR>(
+                               "Chassis Intrusion Detected. Current state: Open",
+                               phosphor::logging::entry("REDFISH_MESSAGE_ID=%s",
+                               "OpenBMC.0.1.ChassisIntrusionDetected"));
+                        }
+                        else
+                        {
+                            phosphor::logging::log<phosphor::logging::level::ERR>(
+                               "Chassis Intrusion Reset. Current state: Closed",
+                               phosphor::logging::entry("REDFISH_MESSAGE_ID=%s",
+                               "OpenBMC.0.1.ChassisIntrusionReset"));
+                        }
+                    }
+                }
+            }).detach();
+        }
+    }
+}
+
 } // namespace pid_control
diff --git a/util.hpp b/util.hpp
index 362d517..995d142 100644
--- a/util.hpp
+++ b/util.hpp
@@ -47,4 +47,5 @@ void debugPrint(const std::map<std::string, conf::SensorConfig>& sensorConfig,
                 const std::map<int64_t, conf::PIDConf>& zoneConfig,
                 const std::map<int64_t, conf::ZoneConfig>& zoneDetailsConfig);

+void chassisIntrusionMonitor(void);
 } // namespace pid_control
--
2.17.1

