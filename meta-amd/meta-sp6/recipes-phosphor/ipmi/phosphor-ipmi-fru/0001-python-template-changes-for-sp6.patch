From c4d9286a28f5e517b30dcac1a1b6f7c0af60e216 Mon Sep 17 00:00:00 2001
From: Rajaganesh Rathinasabapathi <Rajaganesh.Rathinasabapathi@amd.com>
Date: Wed, 18 May 2022 04:45:38 -0500
Subject: [PATCH] python template changes for sp5

Signed-off-by: Rajaganesh Rathinasabapathi <Rajaganesh.Rathinasabapathi@amd.com>
---
 scripts/extra-properties.mako.cpp |  2 +-
 scripts/extra-properties.py       | 10 ++++++++--
 scripts/fru_gen.py                | 13 +++++++++----
 scripts/writefru.mako.cpp         |  2 +-
 4 files changed, 19 insertions(+), 8 deletions(-)

diff --git a/scripts/extra-properties.mako.cpp b/scripts/extra-properties.mako.cpp
index e566cec..2dda098 100644
--- a/scripts/extra-properties.mako.cpp
+++ b/scripts/extra-properties.mako.cpp
@@ -6,7 +6,7 @@

 using namespace ipmi::vpd;

-extern const std::map<Path, InterfaceMap> extras = {
+const std::map<Path, InterfaceMap> ipmi::vpd::${platform}_extras = {
 % for path in dict.keys():
 <%
     interfaces = dict[path]
diff --git a/scripts/extra-properties.py b/scripts/extra-properties.py
index c63ec9c..fbbd23b 100755
--- a/scripts/extra-properties.py
+++ b/scripts/extra-properties.py
@@ -15,6 +15,12 @@ def main():
         dest='extra_props_yaml',
         default='extra-properties-example.yaml',
         help='input extra properties yaml file to parse')
+
+    parser.add_argument(
+        "-p", "--platform", dest="platform",
+        default="amd",
+        help="platform name")
+
     args = parser.parse_args()

     with open(os.path.join(script_dir, args.extra_props_yaml), 'r') as fd:
@@ -23,10 +29,10 @@ def main():
         # Render the mako template
         template = os.path.join(script_dir, 'extra-properties.mako.cpp')
         t = Template(filename=template)
-        with open('extra-properties-gen.cpp', 'w') as fd:
+        with open(args.platform+'-'+'extra-properties-gen.cpp', 'w') as fd:
             fd.write(
                 t.render(
-                    dict=yamlDict))
+                    dict=yamlDict, platform=args.platform))


 if __name__ == '__main__':
diff --git a/scripts/fru_gen.py b/scripts/fru_gen.py
index 5241f2f..dead1b7 100755
--- a/scripts/fru_gen.py
+++ b/scripts/fru_gen.py
@@ -7,7 +7,7 @@ import argparse
 from mako.template import Template


-def generate_cpp(inventory_yaml, output_dir):
+def generate_cpp(inventory_yaml, output_dir, plat_name):
     with open(os.path.join(script_dir, inventory_yaml), 'r') as f:
         ifile = yaml.safe_load(f)
         if not isinstance(ifile, dict):
@@ -19,9 +19,9 @@ def generate_cpp(inventory_yaml, output_dir):
                      script_dir,
                      "writefru.mako.cpp"))

-        output_hpp = os.path.join(output_dir, "fru-gen.cpp")
+        output_hpp = os.path.join(output_dir, plat_name+"-fru-gen.cpp")
         with open(output_hpp, 'w') as fd:
-            fd.write(t.render(fruDict=ifile))
+            fd.write(t.render(fruDict=ifile, platform=plat_name))


 def main():
@@ -41,6 +41,11 @@ def main():
         default=".",
         help="output directory")

+    parser.add_argument(
+        "-p", "--platform", dest="platform",
+        default="amd",
+        help="platform name")
+
     parser.add_argument(
         'command', metavar='COMMAND', type=str,
         choices=list(valid_commands.keys()),
@@ -52,7 +57,7 @@ def main():
         sys.exit("Can not find input yaml file " + args.inventory_yaml)

     function = valid_commands[args.command]
-    function(args.inventory_yaml, args.outputdir)
+    function(args.inventory_yaml, args.outputdir, args.platform)

 if __name__ == '__main__':
     script_dir = os.path.dirname(os.path.realpath(__file__))
diff --git a/scripts/writefru.mako.cpp b/scripts/writefru.mako.cpp
index a3de4b5..9be0340 100644
--- a/scripts/writefru.mako.cpp
+++ b/scripts/writefru.mako.cpp
@@ -2,7 +2,7 @@
 #include <iostream>
 #include "frup.hpp"

-extern const FruMap frus = {
+const FruMap ${platform}_frus = {
 % for key in fruDict.keys():
    {${key},{
 <%
